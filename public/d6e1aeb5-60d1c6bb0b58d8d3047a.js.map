{"version":3,"sources":["webpack:///./node_modules/video.js/dist/video.es.js"],"names":["browserApi","FullscreenApi","prefixed","apiMap","specApi","i","length","_i","history","log$1","createLogger$1","name","logByType","level","log","_len","arguments","args","Array","_key","type","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","concat","splice","console","fn","info","test","isArray","LogByTypeFactory","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","toString","Object","prototype","keys","object","isObject","each","forEach","key","assign","target","sources","apply","source","value","isPlain","call","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","match","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","maxTouchPoints","DocumentTouch","document","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","indexOf","isEl","nodeType","isInFrame","parent","self","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","slice","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","this","vdata","floor","performance","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","passiveEvents","on","guid","hash","handlersCopy","m","n","opts","defineProperty","supportsPassive","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","bind","uid","bound","throttle","last","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","clearTimeout","timeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","el_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","requestNamedAnimationFrame","_this4","cancelNamedAnimationFrame","cancelAnimationFrame","_this5","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","MODAL_CLASS_NAME","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","isEventKey","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","withCredentials","tech_","err","response","responseBody","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","load","NONE","LOADING","LOADED","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","innerHTML","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","h","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","oldNode","replaceChild","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","_this8","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this9","resolve","play_","_this10","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this11","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this12","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this13","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","handleSrc_","isRetry","_this14","resetRetryOnError_","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","str1","str2","_this15","sourceTech","_this16","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","String","toJSON","createModal","_this17","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this18","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","hasPlugin","normalizeId","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","superClass","subClassMethods","subClass","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","xhr","dom","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","filterRanges","timeRanges","results","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","range","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","getPartsAndSegments","playlist","segments","segment","si","parts","pi","segmentIndex","partIndex","getLastParts","lastSegment","getKnownPartCount","preloadSegment","partCount","preloadHints","count","hint","liveEdgeDelay","master","endList","suggestedPresentationDelay","hasParts","serverControl","partHoldBack","partTargetDuration","holdBack","targetDuration","intervalDuration","endSequence","expired","mediaSequence","backward","precise","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","startIndex","endIndex","durations","_ref3","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","playlists","currentBandwidth","BANDWIDTH","MAX_VALUE","playlistMatch","resolvedUri","someAudioVariant","AUDIO","mediaGroups","groupName","isAudioOnly","variant","CODECS","_ret","Playlist","getMediaInfoForTime","_ref4","startingSegmentIndex","startingPartIndex","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","createPlaylistID","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","phonyUri","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skip","skippedSegments","offset","oldSegments","newSegments","currentMap","newIndex","oldSegment","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","query","canBlockReload","nextMSN","nextPart","canSkipUntil","canSkipDateranges","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","responseText","startingState","parseManifest_","onwarn","oninfo","manifestString","_ref$customTagParsers","_ref$customTagMappers","customParser","addParser","mapper","addTagMapper","manifest","parseManifest","playlistObject","lastRequest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","onreadystatechange","abort","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseType","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","byterange","byterangeEnd","Range","textRange","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","dashPlaylistUnchanged","sidx","aSegment","bSegment","aByterange","bByterange","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","sidxKey","fin","sidxMapping","subarray","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","beforeSend","overrideMimeType","total","loaded","containerRequest","container","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","masterXml","clientOffset","newMaster","manifestUri","oldMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","updateMaster","locations","mpl","mup","createMUPTimeout_","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","URL","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","TransmuxWorker","Stream","init","pipe","destination","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","stream","UINT32_MAX","pow","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","Uint8Array","charCodeAt","payload","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","view","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","metaTable","arr","timestamp","sampleRate","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","newLine","beforeRowOverflow","isEmpty","addText","backspace","row","substr","Cea708Service","serviceNum","currentWindow","windows","startPts","win","setCurrentWindow","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","service","initService","handleText","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","getPts","byteIndex","flushDisplayed","isExtended","newCode","_char","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover$1","reference","direction","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","decodeURIComponent","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","unescape","privateData","tagSize","bufferSize","dispatchType","chunk","frameStart","frameSize","dataAlignmentIndicator","d","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","fragment","trackId","pes","ptsDtsFlags","startPrefix","packetLength","codec","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","len","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","returnSize","parseSyncSafeInteger","isLikelyAacData","getId3Offset","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","findBox","subresults","toUnsigned$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","allSamples","parseSamples","captionParser","segmentCache","timescale","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","baseTimes","scale","baseTime","isFinite","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","ts","ONE_SECOND_IN_TS","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","segmentInfo","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","decode","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","objects","finishProcessingFn","errorObj","Uint32Array","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","_ref5","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","_ref6","decrypt","_ref7","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","iv","waitForCompletion","_ref9","didError","segmentFinish","_ref8","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentXhr","handleInitSegmentResponse","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecs","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","logFn","representationToString","representation","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","audioOnly","sortedPlaylistReps","RESOLUTION","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","resolutionBestRep","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","timeline","segmentLen","selection","isSyncRequest","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","currentTimeline","segmentTimeline","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","audioDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","_error","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","oldPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","mediaSequenceDiff","resetLoader","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","instreamId","def","captionService","captionServices","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","tempBuffer","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","MediaSource","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","Decrypter","createCommonjsModule","basedir","module","exports","require","base","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","__esModule","setPrototypeOf","_setPrototypeOf","inheritsLoose","create","_length","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","_Stream","jobs","timeout_","processJob_","job","ntoh","word","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","audioOnlyMaster","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","cause","newId","abrTimer_","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","mediaGroup","currentPlaylist","forwardBuffer","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","codecString","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","cueOut","_segment$cueOutCont$s","cueOutCont","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","closeToBufferedContent","currentRange","livePoint","videoUnderflow_","nextRange","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","handleVhsMediaChange","qualityLevels","selectedIndex_","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","contentProtection","keySystemsOptions","keySystemsObj","keySystem","keySystemOptions","pssh","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","mainPlaylist","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","option","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupEme_","setupQualityLevels_","mediaSourceUrl_","audioPlaylistLoader","didSetupEmeOptions","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions2","supportedType"],"mappings":"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","file":"d6e1aeb5-60d1c6bb0b58d8d3047a.js","sourcesContent":["import \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.reduce-right.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\n\n/**\n * @license\n * Video.js 7.14.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\nimport window from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { browserSupportsCodec, DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, muxerSupportsCodec, parseCodecs, translateLegacyCodec, codecsFromDefault, getMimeForCodec, isAudioCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\nvar version$5 = \"7.14.3\";\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window.console.info || window.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  };\n};\n\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger$1(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log$1 = createLogger$1('VIDEOJS');\nvar createLogger = log$1.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var computedStyleValue;\n\n    try {\n      computedStyleValue = window.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n/**\n * @file browser.js\n * @module browser\n */\n\n\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n  var left = 0;\n  var top = 0;\n\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var translated = {\n    x: 0,\n    y: 0\n  };\n\n  if (IS_IOS) {\n    var item = el;\n\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      var transform = computedStyle(item, 'transform');\n\n      if (/^matrix/.test(transform)) {\n        var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n        translated.x += _values[12];\n        translated.y += _values[13];\n      }\n\n      item = item.parentNode;\n    }\n  }\n\n  var position = {};\n  var boxTarget = findPosition(event.target);\n  var box = findPosition(el);\n  var boxW = box.width;\n  var boxH = box.height;\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs$1;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window.addEventListener('load', setWindowLoaded);\n  }\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\n\n\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n\nvar FakeWeakMap;\n\nif (!window.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log$1('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window.WeakMap ? new WeakMap() : new FakeWeakMap();\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    var old = event || window.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n      window.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n/**\n * @file fn.js\n * @module fn\n */\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = window.performance.now();\n\n  var throttled = function throttled() {\n    var now = window.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget$2 = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget$2.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget$2.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget$2.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget$2.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget$2.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget$2.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget$2.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window.clearTimeout(oldTimeout);\n  var timeout = window.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n\nvar objName = function objName(obj) {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n\n  if (obj.name_) {\n    return obj.name_;\n  }\n\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n\n  return typeof obj;\n};\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateTarget = function validateTarget(target, obj, fnName) {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateEventType = function validateEventType(type, obj, fnName) {\n  if (!isValidEventType(type)) {\n    throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateListener = function validateListener(listener, obj, fnName) {\n  if (typeof listener !== 'function') {\n    throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target, target, method);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    var type = event && typeof event !== 'string' ? event.type : event;\n\n    if (!isValidEventType(type)) {\n      var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n      if (event) {\n        (this.log || log$1).error(error);\n      } else {\n        throw new Error(error);\n      }\n    }\n\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\n\n\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nvar toTitleCase$1 = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions$3() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions$3(result[key], value);\n    });\n  });\n  return result;\n}\n\nvar MapSham = /*#__PURE__*/function () {\n  function MapSham() {\n    this.map_ = {};\n  }\n\n  var _proto = MapSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.map_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.map_[key];\n    return has;\n  };\n\n  _proto.set = function set(key, value) {\n    this.map_[key] = value;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.map_) {\n      callback.call(thisArg, this.map_[key], key, this);\n    }\n  };\n\n  return MapSham;\n}();\n\nvar Map$1 = window.Map ? window.Map : MapSham;\n\nvar SetSham = /*#__PURE__*/function () {\n  function SetSham() {\n    this.set_ = {};\n  }\n\n  var _proto = SetSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.set_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.set_[key];\n    return has;\n  };\n\n  _proto.add = function add(key) {\n    this.set_[key] = 1;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.set_) {\n      callback.call(thisArg, key, key, this);\n    }\n  };\n\n  return SetSham;\n}();\n\nvar Set = window.Set ? window.Set : SetSham;\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component$1 = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map$1();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    } // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n\n\n    this.ready(ready);\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions$3(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {}\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    } // flatten array argument into the main array\n\n\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this; // Fall back to using a timer.\n\n\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  ;\n\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n    var _this4 = this;\n\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.clearTimersOnDispose_();\n    fn = bind(this, fn);\n    var id = this.requestAnimationFrame(function () {\n      fn();\n\n      if (_this4.namedRafs_.has(name)) {\n        _this4.namedRafs_[\"delete\"](name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  ;\n\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_[\"delete\"](name);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this5 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1]; // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n\n        _this5[idName].forEach(function (val, key) {\n          return _this5[cancelName](key);\n        });\n      });\n      _this5.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase$1(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent$1.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\nComponent$1.registerComponent('Component', Component$1);\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.close_ = function (e) {\n      return _this.close(e);\n    };\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown_);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component$1);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n\n\n    track.labelchange_ = function () {\n      _this2.trigger({\n        track: track,\n        type: 'labelchange',\n        target: _this2\n      });\n    };\n\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget$2);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    var label = options.label || '';\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n\n\n    Object.defineProperty(_assertThisInitialized(_this), 'label', {\n      get: function get() {\n        return label;\n      },\n      set: function set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('labelchange');\n        }\n      }\n    });\n    return _this;\n  }\n\n  return Track;\n}(EventTarget$2);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n  /* istanbul ignore if */\n\n\n  if (!details.host) {\n    details.host = window.location.host;\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    // add the url to an anchor and let the browser parse the URL\n    var a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n        return;\n      } // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    var disposeHandler = function disposeHandler() {\n      _this.tech_.off('timeupdate', timeupdateHandler);\n    };\n\n    _this.tech_.one('dispose', disposeHandler);\n\n    if (mode !== 'disabled') {\n      _this.tech_.on('timeupdate', timeupdateHandler);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          if (mode === newMode) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          this.tech_.off('timeupdate', timeupdateHandler);\n\n          if (mode !== 'disabled') {\n            this.tech_.on('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget$2);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this;\n\n    _this.onDurationChange_ = function (e) {\n      return _this.onDurationChange(e);\n    };\n\n    _this.trackProgress_ = function (e) {\n      return _this.trackProgress(e);\n    };\n\n    _this.trackCurrentTime_ = function (e) {\n      return _this.trackCurrentTime(e);\n    };\n\n    _this.stopTrackingCurrentTime_ = function (e) {\n      return _this.stopTrackingCurrentTime(e);\n    };\n\n    _this.disposeSourceHandler_ = function (e) {\n      return _this.disposeSourceHandler(e);\n    }; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin() {}\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  ;\n\n  _proto.setCrossOrigin = function setCrossOrigin() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  ;\n\n  _proto.play = function play() {}\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing() {}\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {}\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions$3(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\n    return true;\n  }\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase$1(name);\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase$1(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions$3({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase$1(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component$1);\n\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleMouseOver_ = function (e) {\n      return _this.handleMouseOver(e);\n    };\n\n    _this.handleMouseOut_ = function (e) {\n      return _this.handleMouseOut(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component$1);\n\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    };\n\n    player.on('posterchange', _this.update_);\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update_);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent$1.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n\n    var updateDisplayHandler = function updateDisplayHandler(e) {\n      return _this.updateDisplay(e);\n    };\n\n    player.on('loadstart', function (e) {\n      return _this.toggleDisplay(e);\n    });\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', function (e) {\n      return _this.preselectTrack(e);\n    }); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window.WebVTT.processCues(window, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component$1);\n\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component$1.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent$1.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent$1.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', function (e) {\n      return _this.handlePlay(e);\n    });\n\n    _this.on(player, 'pause', function (e) {\n      return _this.handlePause(e);\n    });\n\n    if (options.replay) {\n      _this.on(player, 'ended', function (e) {\n        return _this.handleEnded(e);\n      });\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    var _this2 = this;\n\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', function (e) {\n      return _this2.handleSeeked(e);\n    });\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], function (e) {\n      return _this.updateContent(e);\n    });\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n\n      if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component$1);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    var updateContent = function updateContent(e) {\n      return _this.updateContent(e);\n    }; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n\n    _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component$1);\n\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', function (e) {\n      return _this.updateContent(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', function (e) {\n      return _this.updateShowing(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.updateLiveEdgeStatusHandler_ = function (e) {\n        return _this.updateLiveEdgeStatus(e);\n      };\n\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\n\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleMouseDown_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.handleMouseUp_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMouseMove_ = function (e) {\n      return _this.handleMouseMove(e);\n    };\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    }; // Set property names to bar to match with the child Slider class is looking for\n\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this; // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n\n\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component$1);\n\nComponent$1.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component$1);\n\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = findPosition(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    } // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n\n\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component$1);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component$1);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n\n    this.enableIntervalHandler_ = function (e) {\n      return _this2.enableInterval_(e);\n    };\n\n    this.disableIntervalHandler_ = function (e) {\n      return _this2.disableInterval_(e);\n    };\n\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this3 = this; // ignore updates while the tab is hidden\n\n\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\n      var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n      var liveTracker = _this3.player_.liveTracker;\n\n      var duration = _this3.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this3.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this3.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this3.percent_ = percent;\n      }\n\n      if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this3.currentTime_ = currentTime;\n        _this3.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this3.bar) {\n        _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  ;\n\n  _proto.userSeek_ = function userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n\n    this.player_.currentTime(ct);\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.userSeek_(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var liveTracker = this.player_.liveTracker;\n\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent$1.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleMouseDownHandler_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = findPosition(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n    if (this.player_.scrubbing()) {\n      var seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  ;\n\n  _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  };\n\n  return ProgressControl;\n}(Component$1);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n\n\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n      return _this.handlePictureInPictureChange(e);\n    });\n\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n      return _this.handlePictureInPictureEnabledChange(e);\n    }); // TODO: Deactivate button on player emptied event.\n\n\n    _this.disable();\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  ;\n\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n\n    this.handlePictureInPictureEnabledChange();\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', function (e) {\n      return _this.handleFullscreenChange(e);\n    });\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\n\nvar VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevelTooltip, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeLevelTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeLevelTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      var tooltipRect = getBoundingClientRect(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n\n      var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      var pullTooltipBy = tooltipRect.width / 2;\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    }\n\n    this.write(content + \"%\");\n  }\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n      _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return VolumeLevelTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\n\nvar MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseVolumeLevelDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseVolumeLevelDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseVolumeLevelDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n    var _this2 = this;\n\n    var volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n      if (vertical) {\n        _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n      } else {\n        _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n      }\n    });\n  };\n\n  return MouseVolumeLevelDisplay;\n}(Component$1);\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', function (e) {\n      return _this.updateLastVolume_(e);\n    });\n\n    _this.on(player, 'volumechange', function (e) {\n      return _this.updateARIAAttributes(e);\n    });\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n    if (mouseVolumeLevelDisplay) {\n      var volumeBarEl = this.el();\n      var volumeBarRect = getBoundingClientRect(volumeBarEl);\n      var vertical = this.vertical();\n      var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n}; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('touchstart', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('mousemove', function (e) {\n      return _this.handleMouseMove(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n    _this.handleKeyPressHandler_ = function (e) {\n      return _this.handleKeyPress(e);\n    };\n\n    _this.on(player, ['loadstart'], function (e) {\n      return _this.volumePanelState_(e);\n    });\n\n    _this.on(_this.muteToggle, 'keyup', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on(_this.volumeControl, 'keyup', function (e) {\n      return _this.handleVolumeControlKeyUp(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on('mouseover', function (e) {\n      return _this.handleMouseOver(e);\n    });\n\n    _this.on('mouseout', function (e) {\n      return _this.handleMouseOut(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = function (e) {\n      return _this.handleBlur(e);\n    };\n\n    _this.boundHandleTapClick_ = function (e) {\n      return _this.handleTapClick(e);\n    };\n\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component$1);\n\nComponent$1.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    var handleClick = function handleClick(e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMenuKeyUp_ = function (e) {\n      return _this.handleMenuKeyUp(e);\n    };\n\n    _this.on(_this.menuButton_, 'tap', handleClick);\n\n    _this.on(_this.menuButton_, 'click', handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', _this.handleMenuKeyUp_);\n    });\n\n    _this.on('mouseleave', function (e) {\n      return _this.handleMouseLeave(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleSubmenuKeyDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      var titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component$1);\n\nComponent$1.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent$1.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent$1.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n    // off for us.\n\n\n    this.track.enabled = true;\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', function (e) {\n      return _this.updateVisibility(e);\n    });\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.updateLabel(e);\n    });\n\n    _this.on(player, 'playbackrateschange', function (e) {\n      return _this.handlePlaybackRateschange(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var rates = this.playbackRates();\n    var items = [];\n\n    for (var i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n\n    return items;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  ;\n\n  _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n    this.update();\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    var player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component$1);\n\nComponent$1.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component$1);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent$1.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', function (e) {\n      return _this.open(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = _this.updateDisplay.bind(_assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions$3({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component$1);\n\nComponent$1.registerComponent('ResizeManager', ResizeManager);\nvar defaults = {\n  trackingThreshold: 30,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=30]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions$3(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.handleVisibilityChange_ = function (e) {\n      return _this.handleVisibilityChange(e);\n    };\n\n    _this.trackLiveHandler_ = function () {\n      return _this.trackLive_();\n    };\n\n    _this.handlePlay_ = function (e) {\n      return _this.handlePlay(e);\n    };\n\n    _this.handleFirstTimeupdate_ = function (e) {\n      return _this.handleFirstTimeupdate(e);\n    };\n\n    _this.handleSeeked_ = function (e) {\n      return _this.handleSeeked(e);\n    };\n\n    _this.seekToLiveEdge_ = function (e) {\n      return _this.seekToLiveEdge(e);\n    };\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', function (e) {\n      return _this.handleDurationchange(e);\n    }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n\n\n    _this.one(_this.player_, 'canplay', function () {\n      return _this.toggleTracking();\n    }); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    this.toggleTracking();\n  }\n  /**\n   * start/stop tracking\n   */\n  ;\n\n  _proto.toggleTracking = function toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  ;\n\n  _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component$1);\n\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\n\n\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    _this.isScrubbing_ = false;\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions$3({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {\n    return this.isScrubbing_;\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5); // on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = function (e) {\n      return _this.documentFullscreenChange_(e);\n    };\n\n    _this.boundFullWindowOnEscKey_ = function (e) {\n      return _this.fullWindowOnEscKey(e);\n    };\n\n    _this.boundUpdateStyleEl_ = function (e) {\n      return _this.updateStyleEl_(e);\n    };\n\n    _this.boundApplyInitTime_ = function (e) {\n      return _this.applyInitTime_(e);\n    };\n\n    _this.boundUpdateCurrentBreakpoint_ = function (e) {\n      return _this.updateCurrentBreakpoint_(e);\n    };\n\n    _this.boundHandleTechClick_ = function (e) {\n      return _this.handleTechClick_(e);\n    };\n\n    _this.boundHandleTechDoubleClick_ = function (e) {\n      return _this.handleTechDoubleClick_(e);\n    };\n\n    _this.boundHandleTechTouchStart_ = function (e) {\n      return _this.handleTechTouchStart_(e);\n    };\n\n    _this.boundHandleTechTouchMove_ = function (e) {\n      return _this.handleTechTouchMove_(e);\n    };\n\n    _this.boundHandleTechTouchEnd_ = function (e) {\n      return _this.handleTechTouchEnd_(e);\n    };\n\n    _this.boundHandleTechTap_ = function (e) {\n      return _this.handleTechTap_(e);\n    }; // default isFullscreen_ to false\n\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // Init debugEnabled_\n\n    _this.debugEnabled_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    } // Enable debug mode to fire debugon event for all plugins.\n\n\n    if (options.debug) {\n      _this.debug(true);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.playbackRates(options.playbackRates);\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version$5.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', function (e) {\n      return _this.listenForUserActivity_(e);\n    });\n\n    _this.on('stageclick', function (e) {\n      return _this.handleStageClick_(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on('languagechange', function (e) {\n      return _this.handleLanguagechange(e);\n    });\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    var _this3 = this;\n\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, function () {\n        _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this4 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase$1(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false;\n    var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this4[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (e) {\n        return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n      });\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (eventObj) {\n        if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n          _this4.queuedCallbacks_.push({\n            callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', function (e) {\n      return _this4.handleTechLoadStart_(e);\n    });\n    this.on(this.tech_, 'sourceset', function (e) {\n      return _this4.handleTechSourceset_(e);\n    });\n    this.on(this.tech_, 'waiting', function (e) {\n      return _this4.handleTechWaiting_(e);\n    });\n    this.on(this.tech_, 'ended', function (e) {\n      return _this4.handleTechEnded_(e);\n    });\n    this.on(this.tech_, 'seeking', function (e) {\n      return _this4.handleTechSeeking_(e);\n    });\n    this.on(this.tech_, 'play', function (e) {\n      return _this4.handleTechPlay_(e);\n    });\n    this.on(this.tech_, 'firstplay', function (e) {\n      return _this4.handleTechFirstPlay_(e);\n    });\n    this.on(this.tech_, 'pause', function (e) {\n      return _this4.handleTechPause_(e);\n    });\n    this.on(this.tech_, 'durationchange', function (e) {\n      return _this4.handleTechDurationChange_(e);\n    });\n    this.on(this.tech_, 'fullscreenchange', function (e, data) {\n      return _this4.handleTechFullscreenChange_(e, data);\n    });\n    this.on(this.tech_, 'fullscreenerror', function (e, err) {\n      return _this4.handleTechFullscreenError_(e, err);\n    });\n    this.on(this.tech_, 'enterpictureinpicture', function (e) {\n      return _this4.handleTechEnterPictureInPicture_(e);\n    });\n    this.on(this.tech_, 'leavepictureinpicture', function (e) {\n      return _this4.handleTechLeavePictureInPicture_(e);\n    });\n    this.on(this.tech_, 'error', function (e) {\n      return _this4.handleTechError_(e);\n    });\n    this.on(this.tech_, 'posterchange', function (e) {\n      return _this4.handleTechPosterChange_(e);\n    });\n    this.on(this.tech_, 'textdata', function (e) {\n      return _this4.handleTechTextData_(e);\n    });\n    this.on(this.tech_, 'ratechange', function (e) {\n      return _this4.handleTechRateChange_(e);\n    });\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this5 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this5[props.privateName] = _this5[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // TODO: Is this needed for any techs other than Flash?\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this6 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    } // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n\n\n    var resolveMuted = function resolveMuted() {\n      var previouslyMuted = _this6.muted();\n\n      _this6.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this6.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this6.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this6.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](function (err) {\n        restoreMuted();\n        throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n      });\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this6.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function () {\n      _this6.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions$3({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this7 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this7.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the initial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this7.techGet('currentSrc');\n\n          _this7.lastSource_.tech = techSrc;\n\n          _this7.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this8 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this8.currentTime()) {\n        _this8.removeClass('vjs-waiting');\n\n        _this8.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.toggleClass('vjs-ios-native-fs');\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // TODO: Is this needed for techs other than Flash?\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log$1(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this9 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this9.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this10 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this10.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      // TODO: Required for techs other than Flash?\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this11 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this11.isFullscreen(true);\n        }, function () {\n          return _this11.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this12 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(function () {\n          return _this12.isFullscreen(false);\n        }));\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this13 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this13.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n    var _this14 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // Reset retry behavior for new source\n\n\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // initial sources\n\n\n    this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this14.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      if (!isRetry) {\n        _this14.cache_.sources = sources;\n      }\n\n      _this14.updateSourceCaches_(middlewareSource);\n\n      var err = _this14.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this14.handleSrc_(sources.slice(1));\n        }\n\n        _this14.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this14.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this14.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this14.tech_);\n    }); // Try another available source if this one fails before playback.\n\n    if (this.options_.retryOnError && sources.length > 1) {\n      var retry = function retry() {\n        // Remove the error modal\n        _this14.error(null);\n\n        _this14.handleSrc_(sources.slice(1), true);\n      };\n\n      var stopListeningForErrors = function stopListeningForErrors() {\n        _this14.off('error', retry);\n      };\n\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n\n      this.resetRetryOnError_ = function () {\n        _this14.off('error', retry);\n\n        _this14.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    return this.handleSrc_(source, false);\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this15 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this15.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this16 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this16.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code.\n   *\n   * Changing the langauge will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions$3(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions$3(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this17 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this17.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this18 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions$3(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this18.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions$3(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  }\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  ;\n\n  _proto.debug = function debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    } // ignore any value that isn't an array\n\n\n    if (!Array.isArray(newRates)) {\n      return;\n    } // ignore any arrays that don't only contain numbers\n\n\n    if (!newRates.every(function (rate) {\n      return typeof rate === 'number';\n    })) {\n      return;\n    }\n\n    this.cache_.playbackRates = newRates;\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('playbackrateschange');\n  };\n\n  return Player;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    } // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions$3(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions$3(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n\n  return videojs.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs.VERSION = version$5;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\n\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs.extend = extend;\nvideojs.mergeOptions = mergeOptions$3;\nvideojs.bind = bind;\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs.plugin = function (name, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\nvideojs.formatTime = formatTime;\nvideojs.setFormatTime = setFormatTime;\nvideojs.resetFormatTime = resetFormatTime;\nvideojs.parseUrl = parseUrl;\nvideojs.isCrossOrigin = isCrossOrigin;\nvideojs.EventTarget = EventTarget$2;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs.url = Url;\nvideojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n// In a major update this could become the default text and key.\n\nvideojs.addLanguage('en', {\n  'Non-Fullscreen': 'Exit Fullscreen'\n});\n/*! @name @videojs/http-streaming @version 2.9.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = _resolveUrl;\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar logger = function logger(source) {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n  }\n\n  return function () {};\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\n\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return videojs.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n\n  count = bufferB.length;\n\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n  if (playbackRate === void 0) {\n    playbackRate = 1;\n  }\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\n\nvar isRangeDifferent = function isRangeDifferent(a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n\n  for (var i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n\n  return false;\n};\n\nvar lastBufferedEnd = function lastBufferedEnd(a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n\n  return a.end(a.length - 1);\n};\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs.createTimeRange;\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nvar getPartsAndSegments = function getPartsAndSegments(playlist) {\n  return (playlist.segments || []).reduce(function (acc, segment, si) {\n    if (segment.parts) {\n      segment.parts.forEach(function (part, pi) {\n        acc.push({\n          duration: part.duration,\n          segmentIndex: si,\n          partIndex: pi,\n          part: part,\n          segment: segment\n        });\n      });\n    } else {\n      acc.push({\n        duration: segment.duration,\n        segmentIndex: si,\n        partIndex: null,\n        segment: segment,\n        part: null\n      });\n    }\n\n    return acc;\n  }, []);\n};\n\nvar getLastParts = function getLastParts(media) {\n  var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\n\nvar getKnownPartCount = function getKnownPartCount(_ref) {\n  var preloadSegment = _ref.preloadSegment;\n\n  if (!preloadSegment) {\n    return;\n  }\n\n  var parts = preloadSegment.parts,\n      preloadHints = preloadSegment.preloadHints;\n  var partCount = (preloadHints || []).reduce(function (count, hint) {\n    return count + (hint.type === 'PART' ? 1 : 0);\n  }, 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} master the master playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\n\nvar liveEdgeDelay = function liveEdgeDelay(master, media) {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n\n  if (master && master.suggestedPresentationDelay) {\n    return master.suggestedPresentationDelay;\n  }\n\n  var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  var backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  var forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(_ref2) {\n  var defaultDuration = _ref2.defaultDuration,\n      durationList = _ref2.durationList,\n      startIndex = _ref2.startIndex,\n      endIndex = _ref2.endIndex;\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref3 = [endIndex, startIndex];\n    startIndex = _ref3[0];\n    endIndex = _ref3[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += durationList[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var lastSegmentTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n\n  return Math.max(0, lastSegmentTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\n\nvar getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n  var playlist = _ref4.playlist,\n      currentTime = _ref4.currentTime,\n      startingSegmentIndex = _ref4.startingSegmentIndex,\n      startingPartIndex = _ref4.startingPartIndex,\n      startTime = _ref4.startTime;\n  var time = currentTime - startTime;\n  var partsAndSegments = getPartsAndSegments(playlist);\n  var startIndex = 0;\n\n  for (var i = 0; i < partsAndSegments.length; i++) {\n    var partAndSegment = partsAndSegments[i];\n\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n\n    startIndex = i;\n    break;\n  }\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n        var _partAndSegment = partsAndSegments[_i2];\n        time += _partAndSegment.duration; // TODO: consider not using TIME_FUDGE_FACTOR at all here\n\n        if (time + TIME_FUDGE_FACTOR > 0) {\n          return {\n            partIndex: _partAndSegment.partIndex,\n            segmentIndex: _partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex: startIndex,\n              endIndex: _i2\n            })\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (var _i3 = startIndex; _i3 < 0; _i3++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n    var _partAndSegment2 = partsAndSegments[_i4];\n    time -= _partAndSegment2.duration; // TODO: consider not using TIME_FUDGE_FACTOR at all here\n\n    if (time - TIME_FUDGE_FACTOR < 0) {\n      return {\n        partIndex: _partAndSegment2.partIndex,\n        segmentIndex: _partAndSegment2.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex: startIndex,\n          endIndex: _i4\n        })\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n  if (bytesReceived === void 0) {\n    bytesReceived = 0;\n  }\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\nvar playlistMatch = function playlistMatch(a, b) {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n\n  return false;\n};\n\nvar someAudioVariant = function someAudioVariant(master, callback) {\n  var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n  var found = false;\n\n  for (var groupName in AUDIO) {\n    for (var label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n\n      if (found) {\n        break;\n      }\n    }\n\n    if (found) {\n      break;\n    }\n  }\n\n  return !!found;\n};\n\nvar isAudioOnly = function isAudioOnly(master) {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!master || !master.playlists || !master.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only master.\n    var found = someAudioVariant(master, function (variant) {\n      return variant.playlists && variant.playlists.length || variant.uri;\n    });\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n\n  var _loop = function _loop(i) {\n    var playlist = master.playlists[i];\n    var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(function (c) {\n      return isAudioCodec(c);\n    })) {\n      return \"continue\";\n    } // playlist is in an audio group it is audio only\n\n\n    var found = someAudioVariant(master, function (variant) {\n      return playlistMatch(playlist, variant);\n    });\n\n    if (found) {\n      return \"continue\";\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n\n    return {\n      v: false\n    };\n  };\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n    if (typeof _ret === \"object\") return _ret.v;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n\n  return true;\n}; // exports\n\n\nvar Playlist = {\n  liveEdgeDelay: liveEdgeDelay,\n  duration: duration,\n  seekable: seekable,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition,\n  isAudioOnly: isAudioOnly,\n  playlistMatch: playlistMatch\n};\nvar log = videojs.log;\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + \"-\" + uri;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [experimentalLLHLS=false]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\n\nvar parseManifest = function parseManifest(_ref) {\n  var onwarn = _ref.onwarn,\n      oninfo = _ref.oninfo,\n      manifestString = _ref.manifestString,\n      _ref$customTagParsers = _ref.customTagParsers,\n      customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n      _ref$customTagMappers = _ref.customTagMappers,\n      customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n      experimentalLLHLS = _ref.experimentalLLHLS;\n  var parser = new Parser();\n\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n\n  customTagParsers.forEach(function (customParser) {\n    return parser.addParser(customParser);\n  });\n  customTagMappers.forEach(function (mapper) {\n    return parser.addTagMapper(mapper);\n  });\n  parser.push(manifestString);\n  parser.end();\n  var manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!experimentalLLHLS) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n\n  if (!manifest.targetDuration) {\n    var targetDuration = 10;\n\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce(function (acc, s) {\n        return Math.max(acc, s.duration);\n      }, 0);\n    }\n\n    if (onwarn) {\n      onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n    }\n\n    manifest.targetDuration = targetDuration;\n  }\n\n  var parts = getLastParts(manifest);\n\n  if (parts.length && !manifest.partTargetDuration) {\n    var partTargetDuration = parts.reduce(function (acc, p) {\n      return Math.max(acc, p.duration);\n    }, 0);\n\n    if (onwarn) {\n      onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n\n    manifest.partTargetDuration = partTargetDuration;\n  }\n\n  return manifest;\n};\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  if (!master.mediaGroups) {\n    return;\n  }\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    if (!master.mediaGroups[mediaType]) {\n      return;\n    }\n\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a master\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\n\nvar setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n  var playlist = _ref2.playlist,\n      uri = _ref2.uri,\n      id = _ref2.id;\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS master playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    setupMediaPlaylist({\n      playlist: playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a master playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         Master playlist\n */\n\n\nvar masterForMedia = function masterForMedia(media, uri) {\n  var id = createPlaylistID(0, uri);\n  var master = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window.location.href,\n    resolvedUri: window.location.href,\n    playlists: [{\n      uri: uri,\n      id: id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n  master.playlists[uri] = master.playlists[0];\n  return master;\n};\n/**\n * Does an in-place update of the master manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} master\n *        Master manifest object\n * @param {string} uri\n *        The source URI\n */\n\n\nvar addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n  master.uri = uri;\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    if (!master.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      var phonyUri = \"placeholder-uri-\" + i;\n      master.playlists[i].uri = phonyUri;\n    }\n  }\n\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey;\n\n    if (!properties.playlists || !properties.playlists.length) {\n      properties.playlists = [_extends({}, properties)];\n    }\n\n    properties.playlists.forEach(function (p, i) {\n      var id = createPlaylistID(i, groupId);\n\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      master.playlists[p.id] = p;\n      master.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(master);\n  resolveMediaGroupUris(master);\n};\n\nvar mergeOptions$2 = videojs.mergeOptions,\n    EventTarget$1 = videojs.EventTarget;\n\nvar addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n  if (media.endList) {\n    return uri;\n  }\n\n  var query = [];\n\n  if (media.serverControl && media.serverControl.canBlockReload) {\n    var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n    var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        query.push(\"_HLS_part=\" + nextPart);\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n\n\n    query.unshift(\"_HLS_msn=\" + nextMSN);\n  }\n\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    query.unshift('_HLS_skip=' + (media.serverControl.canSkipDateranges ? 'v2' : 'YES'));\n  }\n\n  query.forEach(function (str, i) {\n    var symbol = i === 0 ? '?' : '&';\n    uri += \"\" + symbol + str;\n  });\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\n\nvar updateSegment = function updateSegment(a, b) {\n  if (!a) {\n    return b;\n  }\n\n  var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (var i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var oldSegments = original.slice();\n  var newSegments = update.slice();\n  offset = offset || 0;\n  var result = [];\n  var currentMap;\n\n  for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    var oldSegment = oldSegments[newIndex + offset];\n    var newSegment = newSegments[newIndex];\n\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n\n      result.push(newSegment);\n    }\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\n\nvar getAllSegments = function getAllSegments(media) {\n  var segments = media.segments || [];\n  var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\n\nvar isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n  return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence;\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n  if (unchangedCheck === void 0) {\n    unchangedCheck = isPlaylistUnchanged;\n  }\n\n  var result = mergeOptions$2(master, {});\n  var oldMedia = result.playlists[newMedia.id];\n\n  if (!oldMedia) {\n    return null;\n  }\n\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n\n  newMedia.segments = getAllSegments(newMedia);\n  var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var _i = 0; _i < result.playlists.length; _i++) {\n    if (result.playlists[_i].id === newMedia.id) {\n      result.playlists[_i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (!properties.playlists) {\n      return;\n    }\n\n    for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n      if (newMedia.id === properties.playlists[_i2].id) {\n        properties.playlists[_i2] = newMedia;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\n\nvar PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(src, vhs, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n\n    _this.logger_ = logger('PlaylistLoader');\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.src = src;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var vhsOptions = vhs.options_;\n    _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // initialize the loader state\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(_assertThisInitialized(_this));\n\n    _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n    return _this;\n  }\n\n  var _proto = PlaylistLoader.prototype;\n\n  _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n    var _this2 = this;\n\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n\n    var media = this.media();\n    var uri = resolveUrl(this.master.uri, media.uri);\n\n    if (this.experimentalLLHLS) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri: uri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this2.request) {\n        return;\n      }\n\n      if (error) {\n        return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n      }\n\n      _this2.haveMetadata({\n        playlistString: _this2.request.responseText,\n        url: _this2.media().uri,\n        id: _this2.media().id\n      });\n    });\n  };\n\n  _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n    var uri = playlist.uri,\n        id = playlist.id; // any in-flight request is now finished\n\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[id],\n      status: xhr.status,\n      message: \"HLS playlist request error at URL: \" + uri + \".\",\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  };\n\n  _proto.parseManifest_ = function parseManifest_(_ref) {\n    var _this3 = this;\n\n    var url = _ref.url,\n        manifestString = _ref.manifestString;\n    return parseManifest({\n      onwarn: function onwarn(_ref2) {\n        var message = _ref2.message;\n        return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n      },\n      oninfo: function oninfo(_ref3) {\n        var message = _ref3.message;\n        return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n      },\n      manifestString: manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      experimentalLLHLS: this.experimentalLLHLS\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n  ;\n\n  _proto.haveMetadata = function haveMetadata(_ref4) {\n    var _this4 = this;\n\n    var playlistString = _ref4.playlistString,\n        playlistObject = _ref4.playlistObject,\n        url = _ref4.url,\n        id = _ref4.id; // any in-flight request is now finished\n\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    var playlist = playlistObject || this.parseManifest_({\n      url: url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist: playlist,\n      uri: url,\n      id: id\n    }); // merge this playlist into the master\n\n    var update = updateMaster$1(this.master, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    } // refresh live playlists after a target duration passes\n\n\n    if (!this.media().endList) {\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        _this4.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!update));\n    }\n\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window.clearTimeout(this.mediaUpdateTimeout);\n    window.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n  ;\n\n  _proto.media = function media(playlist, shouldDelay) {\n    var _this5 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.master.playlists[playlist];\n    }\n\n    window.clearTimeout(this.finalRenditionTimeout);\n\n    if (shouldDelay) {\n      var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n\n    var startingState = this.state;\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n\n        if (startingState === 'HAVE_MASTER') {\n          // The initial playlist was a master manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n\n      return;\n    } // switching to the active playlist is a no-op\n\n\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this5.request) {\n        return;\n      }\n\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(_this5.handleManifestRedirects, playlist.resolvedUri, req);\n\n      if (error) {\n        return _this5.playlistRequestError(_this5.request, playlist, startingState);\n      }\n\n      _this5.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n      if (startingState === 'HAVE_MASTER') {\n        _this5.trigger('loadedmetadata');\n      } else {\n        _this5.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.stopRequest();\n    window.clearTimeout(this.mediaUpdateTimeout);\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.load = function load(shouldDelay) {\n    var _this6 = this;\n\n    window.clearTimeout(this.mediaUpdateTimeout);\n    var media = this.media();\n\n    if (shouldDelay) {\n      var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        return _this6.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.start = function start() {\n    var _this7 = this;\n\n    this.started = true;\n\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a master playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(function () {\n        _this7.setupInitialPlaylist(_this7.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this7.request = null;\n\n      if (error) {\n        _this7.error = {\n          status: req.status,\n          message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this7.state === 'HAVE_NOTHING') {\n          _this7.started = false;\n        }\n\n        return _this7.trigger('error');\n      }\n\n      _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n      var manifest = _this7.parseManifest_({\n        manifestString: req.responseText,\n        url: _this7.src\n      });\n\n      _this7.setupInitialPlaylist(manifest);\n    });\n  };\n\n  _proto.srcUri = function srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a master or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a master playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a master playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n  ;\n\n  _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MASTER';\n\n    if (manifest.playlists) {\n      this.master = manifest;\n      addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(function (playlist) {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(function (segment) {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n\n    var uri = this.srcUri() || window.location.href;\n    this.master = masterForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.master.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file xhr.js\n */\n\n\nvar videojsXHR = videojs.xhr,\n    mergeOptions$1 = videojs.mergeOptions;\n\nvar callbackWrapper = function callbackWrapper(request, error, response, callback) {\n  var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n\n  callback(error, request);\n};\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = mergeOptions$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n    var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    var request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var byterangeEnd = byterange.offset + byterange.length - 1;\n  var byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex;\n  var ascii;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime;\n  var programDateTime;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === void 0 ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + \" was not found in the stream\"\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + \" is not buffered yet. Try again\"\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n}; // which will only happen if the request is complete.\n\n\nvar callbackOnCompleted = function callbackOnCompleted(request, cb) {\n  if (request.readyState === 4) {\n    return cb();\n  }\n\n  return;\n};\n\nvar containerRequest = function containerRequest(uri, xhr, cb) {\n  var bytes = [];\n  var id3Offset;\n  var finished = false;\n\n  var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n\n  var progressListener = function progressListener(error, request) {\n    if (finished) {\n      return;\n    }\n\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n\n    var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n\n  var options = {\n    uri: uri,\n    beforeSend: function beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function (_ref) {\n        _ref.total;\n        _ref.loaded;\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  var request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\n\nvar EventTarget = videojs.EventTarget,\n    mergeOptions = videojs.mergeOptions;\n\nvar dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n\n  for (var i = 0; i < a.segments.length; i++) {\n    var aSegment = a.segments[i];\n    var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n\n    var aByterange = aSegment.byterange;\n    var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n\n  return true;\n};\n/**\n * Parses the master XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.masterXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\n\nvar parseMasterXml = function parseMasterXml(_ref) {\n  var masterXml = _ref.masterXml,\n      srcUrl = _ref.srcUrl,\n      clientOffset = _ref.clientOffset,\n      sidxMapping = _ref.sidxMapping;\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset,\n    sidxMapping: sidxMapping\n  });\n  addPropertiesToMaster(master, srcUrl);\n  return master;\n};\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\n\nvar updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n  var noChanges = true;\n  var update = mergeOptions(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlist = newMaster.playlists[i];\n\n    if (playlist.sidx) {\n      var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n\n    var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} master the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\n\nvar DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.masterPlaylistLoader_ = masterPlaylistLoader || _assertThisInitialized(_this);\n\n    if (!masterPlaylistLoader) {\n      _this.isMaster_ = true;\n    }\n\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {};\n    _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (_this.isMaster_) {\n      _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.masterPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      _this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n\n    return _this;\n  }\n\n  var _proto = DashPlaylistLoader.prototype;\n\n  _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n\n    this.request = null;\n\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n  ;\n\n  _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n    var _this2 = this;\n\n    var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window.setTimeout(function () {\n        return cb(false);\n      }, 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n\n    var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n    var fin = function fin(err, request) {\n      if (_this2.requestErrored_(err, request, startingState)) {\n        return;\n      }\n\n      var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n      var sidx;\n\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        _this2.requestErrored_(e, request, startingState);\n\n        return;\n      }\n\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx: sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n\n    this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n      if (err) {\n        return fin(err, request);\n      }\n\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist: playlist,\n          internal: true,\n          blacklistDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n\n      var _playlist$sidx$bytera = playlist.sidx.byterange,\n          offset = _playlist$sidx$bytera.offset,\n          length = _playlist$sidx$bytera.length;\n\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n\n      _this2.request = _this2.vhs_.xhr({\n        uri: uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window.clearTimeout(this.mediaRequest_);\n    window.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.off();\n  };\n\n  _proto.hasPendingRequest = function hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  _proto.media = function media(playlist) {\n    var _this3 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n\n      return;\n    } // switching to the active playlist is a no-op\n\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n      // everything is ready just continue to haveMetadata\n      _this3.haveMetadata({\n        startingState: startingState,\n        playlist: playlist\n      });\n    });\n  };\n\n  _proto.haveMetadata = function haveMetadata(_ref2) {\n    var startingState = _ref2.startingState,\n        playlist = _ref2.playlist;\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MASTER') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  };\n\n  _proto.pause = function pause() {\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.stopRequest();\n    window.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n\n    if (this.isMaster_) {\n      window.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  _proto.load = function load(isFinalRendition) {\n    var _this4 = this;\n\n    window.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        return _this4.load();\n      }, delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      // Check to see if this is the master loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the master manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.start = function start() {\n    var _this5 = this;\n\n    this.started = true; // We don't need to request the master manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMaster_) {\n      this.mediaRequest_ = window.setTimeout(function () {\n        return _this5.haveMaster_();\n      }, 0);\n      return;\n    }\n\n    this.requestMaster_(function (req, masterChanged) {\n      _this5.haveMaster_();\n\n      if (!_this5.hasPendingRequest() && !_this5.media_) {\n        _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n      }\n    });\n  };\n\n  _proto.requestMaster_ = function requestMaster_(cb) {\n    var _this6 = this;\n\n    this.request = this.vhs_.xhr({\n      uri: this.masterPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      if (_this6.requestErrored_(error, req)) {\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n\n        return;\n      }\n\n      var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n      _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this6.masterLoaded_ = Date.now();\n      }\n\n      _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n      if (masterChanged) {\n        _this6.handleMaster_();\n\n        _this6.syncClientServerClock_(function () {\n          return cb(req, masterChanged);\n        });\n\n        return;\n      }\n\n      return cb(req, masterChanged);\n    });\n  }\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n  ;\n\n  _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this7 = this;\n\n    var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this7.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  };\n\n  _proto.haveMaster_ = function haveMaster_() {\n    this.state = 'HAVE_MASTER';\n\n    if (this.isMaster_) {\n      // We have the master playlist at this point, so\n      // trigger this to allow MasterPlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  };\n\n  _proto.handleMaster_ = function handleMaster_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    var newMaster = parseMasterXml({\n      masterXml: this.masterPlaylistLoader_.masterXml_,\n      srcUrl: this.masterPlaylistLoader_.srcUrl,\n      clientOffset: this.masterPlaylistLoader_.clientOffset_,\n      sidxMapping: this.masterPlaylistLoader_.sidxMapping_\n    });\n    var oldMaster = this.masterPlaylistLoader_.master; // if we have an old master to compare the new master against\n\n    if (oldMaster) {\n      newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n    } // only update master if we have a new master\n\n\n    this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n    var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n    if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n      this.masterPlaylistLoader_.srcUrl = location;\n    }\n\n    if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n\n    return Boolean(newMaster);\n  };\n\n  _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n    var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n      }\n\n      return;\n    }\n\n    this.createMUPTimeout_(mup);\n  };\n\n  _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n    var mpl = this.masterPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(function () {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   */\n  ;\n\n  _proto.refreshXml_ = function refreshXml_() {\n    var _this8 = this;\n\n    this.requestMaster_(function (req, masterChanged) {\n      if (!masterChanged) {\n        return;\n      }\n\n      if (_this8.media_) {\n        _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n\n      _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n      _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n        // TODO: do we need to reload the current playlist?\n        _this8.refreshMedia_(_this8.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n  ;\n\n  _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n    var _this9 = this;\n\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for master we have to reparse the master xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating master\n    // if this is the first time this.media_ is being set.\n    // as master was just parsed in that case.\n\n\n    if (this.media_ && this.isMaster_) {\n      this.handleMaster_();\n    }\n\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.mediaUpdateTimeout) {\n      var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n        if (_this9.media().endList) {\n          return;\n        }\n\n        _this9.mediaUpdateTimeout = window.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n\n          createMediaUpdateTimeout();\n        }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n      };\n\n      createMediaUpdateTimeout();\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget);\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\n\nvar stringToArrayBuffer = function stringToArrayBuffer(string) {\n  var view = new Uint8Array(new ArrayBuffer(string.length));\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view.buffer;\n};\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\n\n\nvar browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\n\nvar createObjectURL = function createObjectURL(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\n\nvar factory = function factory(code) {\n  return function () {\n    var objectUrl = createObjectURL(code);\n    var worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    var terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n\n    return worker;\n  };\n};\n\nvar transform = function transform(code) {\n  return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n};\n\nvar getWorkerString = function getWorkerString(fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n/* rollup-plugin-worker-factory start for worker!/Users/bcasey/Projects/videojs-http-streaming/src/transmuxer-worker.js */\n\n\nvar workerCode$1 = transform(getWorkerString(function () {\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n  var Stream = function Stream() {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n\n      this.off = function (type, listener) {\n        var index;\n\n        if (!listeners[type]) {\n          return false;\n        }\n\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n\n  Stream.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n\n  Stream.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n\n  Stream.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n\n  Stream.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n\n  Stream.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n\n  var stream = Stream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var UINT32_MAX = Math.pow(2, 32) - 1;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function box(type) {\n    var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n\n    return result;\n  };\n\n  dinf = function dinf() {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n\n  esds = function esds(track) {\n    return box(types.esds, new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15, // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function ftyp() {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n\n  hdlr = function hdlr(type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n\n  mdat = function mdat(data) {\n    return box(types.mdat, data);\n  };\n\n  mdhd = function mdhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n    0x55, 0xc4, // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n\n    return box(types.mdhd, result);\n  };\n\n  mdia = function mdia(track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n\n  mfhd = function mfhd(sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function minf(track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n\n  moof = function moof(sequenceNumber, tracks) {\n    var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n\n  moov = function moov(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n\n  mvex = function mvex(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n\n  mvhd = function mvhd(duration) {\n    var bytes = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // creation_time\n    0x00, 0x00, 0x00, 0x02, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n    0x00, 0x01, 0x00, 0x00, // 1.0 rate\n    0x01, 0x00, // 1.0 volume\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n\n  sdtp = function sdtp(track) {\n    var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n\n    return box(types.sdtp, bytes);\n  };\n\n  stbl = function stbl(track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n\n  (function () {\n    var videoSample, audioSample;\n\n    stsd = function stsd(track) {\n      return box(types.stsd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n\n    videoSample = function videoSample(track) {\n      var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i,\n          avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff, // width\n      (track.height & 0xff00) >> 8, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length], // numOfSequenceParameterSets\n      sequenceParameterSets, // \"SPS\"\n      [pps.length], // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n            vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n\n      return box.apply(null, avc1Box);\n    };\n\n    audioSample = function audioSample(track) {\n      return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n\n  tkhd = function tkhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n\n  traf = function traf(track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 + // tfhd\n    20 + // tfdt\n    8 + // traf header\n    16 + // mfhd\n    8 + // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n\n  trak = function trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n\n  trex = function trex(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n\n    return box(types.trex, result);\n  };\n\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function trunHeader(samples, offset) {\n      var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n\n      return [0x00, // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function videoTrun(track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    audioTrun = function audioTrun(track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    trun$1 = function trun(track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n\n      return videoTrun(track, offset);\n    };\n  })();\n\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function initSegment(tracks) {\n      var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n    var i,\n        currentNal,\n        currentFrame = [],\n        frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n\n  var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n    var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n\n  var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n\n  var createDefaultSample = function createDefaultSample() {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n\n  var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n\n  var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n    var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n\n  var concatenateNalData = function concatenateNalData(gops) {\n    var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n\n    return data;\n  }; // generate the track's sample table from a frame\n\n\n  var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n    var sample,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n\n  var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n    var i,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = frame.byteLength,\n        numberOfNals = frame.length,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var frameUtils = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n  var zeroFill = function zeroFill(count) {\n    var a = [];\n\n    while (count--) {\n      a.push(0);\n    }\n\n    return a;\n  };\n\n  var makeTable = function makeTable(metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n\n  var silence;\n\n  var silence_1 = function silence_1() {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function sumFrameByteLengths(array) {\n    var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n\n  var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i,\n        firstFrame;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = silence_1()[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n\n    track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n\n  var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n\n  var generateSampleTable = function generateSampleTable(frames) {\n    var i,\n        currentFrame,\n        samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n\n  var concatenateFrameData = function concatenateFrameData(frames) {\n    var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var audioFrameUtils = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function collectDtsInfo(track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n\n  var clearDtsInfo = function clearDtsInfo(track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n\n    return baseMediaDecodeTime;\n  };\n\n  var trackDecodeInfo = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function parseSei(bytes) {\n    var i = 0,\n        result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n  var parseUserData = function parseUserData(sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n\n  var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n    var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n\n    count = userData[0] & 0x1f;\n\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n\n    return results;\n  };\n\n  var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  }; // exports\n\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  }; // Link To Transport\n  // -----------------\n\n  var CaptionStream$1 = function CaptionStream(options) {\n    options = options || {};\n    CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream(); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n\n  CaptionStream$1.prototype = new stream();\n\n  CaptionStream$1.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n\n    sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n\n    if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n\n    userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n\n      return;\n    } // parse out CC data packets and save them for later\n\n\n    newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n\n  CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n\n  CaptionStream$1.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n\n  CaptionStream$1.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n\n  CaptionStream$1.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n\n  CaptionStream$1.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n\n  CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n\n  CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n\n  CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n\n  CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n\n  CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n\n  };\n\n  var get708CharFromCode = function get708CharFromCode(code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n\n    return String.fromCharCode(newCode);\n  };\n\n  var within708TextBlock = function within708TextBlock(b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n\n  var Cea708Window = function Cea708Window(windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n\n    return false;\n  };\n\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n\n  var Cea708Service = function Cea708Service(serviceNum) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n\n  var Cea708Stream = function Cea708Stream() {\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    this.current708Packet = null;\n    this.services = {};\n\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n\n        self.add708Bytes(packet);\n      }\n    };\n  };\n\n  Cea708Stream.prototype = new stream();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n\n      this.pushServiceBlock(serviceNum, i, blockSize);\n\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, true);\n    }\n\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var self = this;\n    this.services[serviceNum] = new Cea708Service(serviceNum);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.handleText = function (i, service, isExtended) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var extended = isExtended ? 0x1000 : 0x0000;\n\n    var _char = get708CharFromCode(extended | b);\n\n    var win = service.currentWindow;\n\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n\n    win.pendingNewLine = false;\n    win.addText(_char);\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n\n  };\n\n  var getCharFromCode = function getCharFromCode(code) {\n    if (code === null) {\n      return '';\n    }\n\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function createDisplayBuffer() {\n    var result = [],\n        i = BOTTOM_ROW + 1;\n\n    while (i--) {\n      result.push('');\n    }\n\n    return result;\n  };\n\n  var Cea608Stream = function Cea608Stream(field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n\n          this.setRollUp(packet.pts, row);\n        }\n\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n\n    };\n  };\n\n  Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n\n  Cea608Stream.prototype.isNormalChar = function (_char2) {\n    return _char2 >= 0x20 && _char2 <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n\n    this.displayed_[this.row_] = '';\n  };\n\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n\n  var captionStream = {\n    CaptionStream: CaptionStream$1,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n\n  var handleRollover$1 = function handleRollover(value, reference) {\n    var direction = 1;\n\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n\n    return value;\n  };\n\n  var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n\n  TimestampRolloverStream$1.prototype = new stream();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  };\n\n  var percentEncode$1 = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function parseUtf8(bytes, start, end) {\n    return decodeURIComponent(percentEncode$1(bytes, start, end));\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591$1 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n  },\n      parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  },\n      tagParsers = {\n    TXXX: function TXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n\n      tag.data = tag.value;\n    },\n    WXXX: function WXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function PRIV(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591$1(tag.data, 0, i);\n          break;\n        }\n      }\n\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n      _MetadataStream;\n\n  _MetadataStream = function MetadataStream(options) {\n    var settings = {\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n        // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n        // tag data that is not complete enough to be parsed\n    buffer = [],\n        // the total number of bytes currently in the buffer\n    bufferSize = 0,\n        i;\n\n    _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n    this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n\n      frameStart = 10;\n\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n          });\n          return;\n        }\n\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id;\n\n        if (tagParsers[frame.id]) {\n          tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n                size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n\n            this.trigger('timestamp', frame);\n          }\n        }\n\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n\n      this.trigger('data', tag);\n    };\n  };\n\n  _MetadataStream.prototype = new stream();\n  var metadataStream = _MetadataStream;\n  var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n  SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  _TransportPacketStream = function TransportPacketStream() {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n        bytesInBuffer = 0;\n\n    _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH$1,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n\n  _TransportPacketStream.prototype = new stream();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  _TransportParseStream = function TransportParseStream() {\n    var parsePsi, parsePat, parsePmt, self;\n\n    _TransportParseStream.prototype.init.call(this);\n\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n\n    parsePsi = function parsePsi(payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n\n    parsePat = function parsePat(payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n\n    parsePmt = function parsePmt(payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n\n    this.push = function (packet) {\n      var result = {},\n          offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = streamTypes.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = streamTypes.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n\n  _TransportParseStream.prototype = new stream();\n  _TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  _ElementaryStream = function ElementaryStream() {\n    var self = this,\n        segmentHadPmt = false,\n        // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n        audio = {\n      data: [],\n      size: 0\n    },\n        timedMetadata = {\n      data: [],\n      size: 0\n    },\n        programMapTable,\n        parsePes = function parsePes(payload, pes) {\n      var ptsDtsFlags;\n      var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n      pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n      // that are frame data that is continuing from the previous fragment. This\n      // is to check that the pes data is the start of a new pes payload\n\n      if (startPrefix !== 1) {\n        return;\n      } // get the packet length, this will be 0 for video\n\n\n      pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      } // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n\n\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function flushStream(stream, type, forceFlush) {\n      var packetData = new Uint8Array(stream.size),\n          event = {\n        type: type\n      },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n      // PES header\n\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n\n      event.trackId = stream.data[0].pid; // reassemble the packet\n\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      } // parse assembled packet's PES header\n\n\n      parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n\n      packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      } // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n\n\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n    _ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n\n    this.push = function (data) {\n      ({\n        pat: function pat() {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function pes() {\n          var stream, streamType;\n\n          switch (data.streamType) {\n            case streamTypes.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n\n            case streamTypes.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function pmt() {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', pmt);\n      }\n\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n\n  _ElementaryStream.prototype = new stream();\n  var m2ts = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: _TransportPacketStream,\n    TransportParseStream: _TransportParseStream,\n    ElementaryStream: _ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: captionStream.CaptionStream,\n    Cea608Stream: captionStream.Cea608Stream,\n    Cea708Stream: captionStream.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n\n  for (var type in streamTypes) {\n    if (streamTypes.hasOwnProperty(type)) {\n      m2ts[type] = streamTypes[type];\n    }\n  }\n\n  var m2ts_1 = m2ts;\n  var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n  var _AdtsStream;\n\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  _AdtsStream = function AdtsStream(handlePartialSegments) {\n    var buffer,\n        frameNum = 0;\n\n    _AdtsStream.prototype.init.call(this);\n\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n      });\n    };\n\n    this.push = function (packet) {\n      var i = 0,\n          frameLength,\n          protectionSkipBytes,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n\n          i++;\n          continue;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n\n      buffer = buffer.subarray(i);\n    };\n\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AdtsStream.prototype = new stream();\n  var adts = _AdtsStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb = function ExpGolomb(workingData) {\n    var // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n    workingWord = 0,\n        // :uint\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n      valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n\n      bits = size - bits;\n\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n\n      return valu;\n    }; // ():uint\n\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n\n    this.loadWord();\n  };\n\n  var expGolomb = ExpGolomb;\n\n  var _H264Stream, _NalByteStream;\n\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  _NalByteStream = function NalByteStream() {\n    var syncPoint = 0,\n        i,\n        buffer;\n\n    _NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n\n    this.push = function (data) {\n      var swapBuffer;\n\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  _H264Stream = function H264Stream() {\n    var nalByteStream = new _NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n\n    _H264Stream.prototype.init.call(this);\n\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n\n    skipScalingList = function skipScalingList(count, expGolombDecoder) {\n      var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n\n    discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n\n    readSequenceParameterSet = function readSequenceParameterSet(data) {\n      var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio = [1, 1],\n          aspectRatioIdc,\n          i;\n      expGolombDecoder = new expGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n\n            case 2:\n              sarRatio = [12, 11];\n              break;\n\n            case 3:\n              sarRatio = [10, 11];\n              break;\n\n            case 4:\n              sarRatio = [16, 11];\n              break;\n\n            case 5:\n              sarRatio = [40, 33];\n              break;\n\n            case 6:\n              sarRatio = [24, 11];\n              break;\n\n            case 7:\n              sarRatio = [20, 11];\n              break;\n\n            case 8:\n              sarRatio = [32, 11];\n              break;\n\n            case 9:\n              sarRatio = [80, 33];\n              break;\n\n            case 10:\n              sarRatio = [18, 11];\n              break;\n\n            case 11:\n              sarRatio = [15, 11];\n              break;\n\n            case 12:\n              sarRatio = [64, 33];\n              break;\n\n            case 13:\n              sarRatio = [160, 99];\n              break;\n\n            case 14:\n              sarRatio = [4, 3];\n              break;\n\n            case 15:\n              sarRatio = [3, 2];\n              break;\n\n            case 16:\n              sarRatio = [2, 1];\n              break;\n\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n\n  _H264Stream.prototype = new stream();\n  var h264 = {\n    H264Stream: _H264Stream,\n    NalByteStream: _NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n  var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n\n  var getId3Offset = function getId3Offset(data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n\n  var isLikelyAacData$1 = function isLikelyAacData(data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n\n  var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n  var percentEncode = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n\n  var parseIso88591 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n\n  var parseType$2 = function parseType(header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n\n    return null;\n  };\n\n  var parseSampleRate = function parseSampleRate(packet) {\n    var i = 0;\n\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n\n    return null;\n  };\n\n  var parseAacTimestamp = function parseAacTimestamp(packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        return null;\n      }\n\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n\n            break;\n          }\n        }\n      }\n\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n\n    return null;\n  };\n\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$2,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n\n  var _AacStream;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n\n  _AacStream = function AacStream() {\n    var everything = new Uint8Array(),\n        timeStamp = 0;\n\n    _AacStream.prototype.init.call(this);\n\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n\n    this.push = function (bytes) {\n      var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n\n          frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n\n          frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n\n        byteIndex++;\n      }\n\n      bytesLeft = everything.length - byteIndex;\n\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AacStream.prototype = new stream();\n  var aac = _AacStream; // constants\n\n  var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES;\n  var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES;\n  var H264Stream = h264.H264Stream;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n  var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n\n  var arrayEquals = function arrayEquals(a, b) {\n    var i;\n\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  _AudioSegmentStream = function AudioSegmentStream(track, options) {\n    var adtsFrames = [],\n        sequenceNumber = 0,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n\n    _AudioSegmentStream.prototype.init.call(this);\n\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n\n      if (track) {\n        audioProperties.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n\n      adtsFrames.push(data);\n    };\n\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4Generator.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n\n  _AudioSegmentStream.prototype = new stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  _VideoSegmentStream = function VideoSegmentStream(track, options) {\n    var sequenceNumber = 0,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n    options = options || {};\n\n    _VideoSegmentStream.prototype.init.call(this);\n\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        videoProperties.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n\n    this.flush = function () {\n      var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n      allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          break;\n        }\n\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n\n        gopIndex--;\n      }\n\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n\n      var trimIndex;\n\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n\n      if (trimIndex === 0) {\n        return gops;\n      }\n\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n\n  _VideoSegmentStream.prototype = new stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  _CoalesceStream = function CoalesceStream(options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n\n    _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n\n  _CoalesceStream.prototype = new stream();\n\n  _CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n        event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n\n        return;\n      }\n    }\n\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      videoProperties.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      audioProperties.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n\n  _CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n\n  _Transmuxer = function Transmuxer(options) {\n    var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n\n    _Transmuxer.prototype.init.call(this);\n\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new aac();\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new adts();\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n    };\n\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts_1.TransportPacketStream();\n      pipeline.parseStream = new m2ts_1.TransportParseStream();\n      pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n      pipeline.adtsStream = new adts();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts_1.CaptionStream(options);\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n    }; // hook up the segment streams once track metadata is delivered\n\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n\n        if (this.transmuxPipeline_) {\n          var keys = Object.keys(this.transmuxPipeline_);\n\n          for (var i = 0; i < keys.length; i++) {\n            var key = keys[i]; // skip non-stream keys and headOfPipeline\n            // which is just a duplicate\n\n            if (key === 'headOfPipeline' || !this.transmuxPipeline_[key].on) {\n              continue;\n            }\n\n            this.transmuxPipeline_[key].on('log', this.getLogTrigger_(key));\n          }\n        }\n\n        hasFlushed = false;\n      }\n\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n\n  _Transmuxer.prototype = new stream();\n  var transmuxer = {\n    Transmuxer: _Transmuxer,\n    VideoSegmentStream: _VideoSegmentStream,\n    AudioSegmentStream: _AudioSegmentStream,\n    AUDIO_PROPERTIES: audioProperties,\n    VIDEO_PROPERTIES: videoProperties,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function toUnsigned(value) {\n    return value >>> 0;\n  };\n\n  var toHexString$1 = function toHexString(value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n\n  var parseType$1 = function parseType(buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n\n  var parseType_1 = parseType$1;\n  var toUnsigned$2 = bin.toUnsigned;\n\n  var findBox = function findBox(data, path) {\n    var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType_1(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of data\n\n\n    return results;\n  };\n\n  var findBox_1 = findBox;\n  var toUnsigned$1 = bin.toUnsigned;\n\n  var tfdt = function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      baseMediaDecodeTime: toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7])\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime *= Math.pow(2, 32);\n      result.baseMediaDecodeTime += toUnsigned$1(data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11]);\n    }\n\n    return result;\n  };\n\n  var parseTfdt = tfdt;\n\n  var parseSampleFlags = function parseSampleFlags(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n\n  var parseSampleFlags_1 = parseSampleFlags;\n\n  var trun = function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  };\n\n  var parseTrun = trun;\n\n  var tfhd = function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  };\n\n  var parseTfhd = tfhd;\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function mapToSample(offset, samples) {\n    var approximateOffset = offset;\n\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n\n      approximateOffset -= sample.size;\n    }\n\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n\n  var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = {\n      logs: [],\n      seiNals: []\n    },\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n\n  var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n\n        sample.pts = currentDts + sample.compositionTimeOffset;\n        currentDts += sample.duration;\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n\n  var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox_1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox_1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n\n  var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n\n  var CaptionParser = function CaptionParser() {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n\n        return null;\n      }\n\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n\n      this.resetCaptionStream();\n    };\n\n    this.reset();\n  };\n\n  var captionParser = CaptionParser;\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function timescale(init) {\n    var result = {},\n        traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox_1(trak, ['tkhd'])[0];\n\n      if (!tkhd) {\n        return null;\n      }\n\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (!mdhd) {\n        return null;\n      }\n\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n\n  startTime = function startTime(timescale, fragment) {\n    var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n    trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    baseTimes = [].concat.apply([], trafs.map(function (traf) {\n      return findBox_1(traf, ['tfhd']).map(function (tfhd) {\n        var id, scale, baseTime; // get the track id from the tfhd\n\n        id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n        scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n        baseTime = findBox_1(traf, ['tfdt']).map(function (tfdt) {\n          var version, result;\n          version = tfdt[0];\n          result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n          if (version === 1) {\n            result *= Math.pow(2, 32);\n            result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n          }\n\n          return result;\n        })[0];\n        baseTime = typeof baseTime === 'number' && !isNaN(baseTime) ? baseTime : Infinity; // convert base time to seconds\n\n        return baseTime / scale;\n      });\n    })); // return the minimum\n\n    result = Math.min.apply(null, baseTimes);\n    return isFinite(result) ? result : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n\n  compositionStartTime = function compositionStartTime(timescales, fragment) {\n    var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    return (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n\n  getVideoTrackIds = function getVideoTrackIds(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox_1(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType_1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n\n  getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n\n  getTracks = function getTracks(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox_1(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n\n      var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType_1(hdlr.subarray(8, 12));\n\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n\n      var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[a-z]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n\n      var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n\n      tracks.push(track);\n    });\n    return tracks;\n  };\n\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox_1,\n    parseType: parseType_1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n\n  var parsePid = function parsePid(packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n\n  var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n    return !!(packet[1] & 0x40);\n  };\n\n  var parseAdaptionField = function parseAdaptionField(packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n\n    return offset;\n  };\n\n  var parseType = function parseType(packet, pmtPid) {\n    var pid = parsePid(packet);\n\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n\n    return null;\n  };\n\n  var parsePat = function parsePat(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n\n  var parsePmt = function parsePmt(packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n\n    return programMapTable;\n  };\n\n  var parsePesType = function parsePesType(packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n\n    switch (type) {\n      case streamTypes.H264_STREAM_TYPE:\n        return 'video';\n\n      case streamTypes.ADTS_STREAM_TYPE:\n        return 'audio';\n\n      case streamTypes.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n\n      default:\n        return null;\n    }\n  };\n\n  var parsePesTime = function parsePesTime(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n\n    if (!pusi) {\n      return null;\n    }\n\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n\n  var parseNalUnitType = function parseNalUnitType(type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n\n      case 0x06:\n        return 'sei_rbsp';\n\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n\n      default:\n        return null;\n    }\n  };\n\n  var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n\n    return foundKeyFrame;\n  };\n\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n      // bytes\n  SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function parsePsi_(bytes, pmt) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type;\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n\n  var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n\n  var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n\n                    currentFrame.size = 0;\n                  }\n                }\n\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n\n  var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n\n  var inspectAac_ = function inspectAac_(bytes) {\n    var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n\n          byteIndex += frameSize;\n          break;\n\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n\n        default:\n          byteIndex++;\n          break;\n      }\n\n      if (endLoop) {\n        return null;\n      }\n    }\n\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n\n  var inspectTs_ = function inspectTs_(bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n\n        switch (type) {\n          case streamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n\n            break;\n\n          case streamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n\n            break;\n        }\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n\n  var inspect = function inspect(bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      var initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      var typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment: segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo: gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      var videoSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      var audioSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo: audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame: id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption: caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo: trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock.videoTsToSeconds(audioTimingInfo.start),\n          end: clock.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock.videoTsToSeconds(videoTimingInfo.start),\n          end: clock.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log: log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n\n  var MessageHandlers = /*#__PURE__*/function () {\n    function MessageHandlers(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n\n    var _proto = MessageHandlers.prototype;\n\n    _proto.init = function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    };\n\n    _proto.pushMp4Captions = function pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    };\n\n    _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n      var timescales = _ref.timescales,\n          data = _ref.data;\n      var startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime: startTime,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n      var data = _ref2.data;\n      var tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks: tracks,\n        data: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n    ;\n\n    _proto.probeTs = function probeTs(_ref3) {\n      var data = _ref3.data,\n          baseStartTime = _ref3.baseStartTime;\n      var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n      var timeInfo = tsInspector.inspect(data, tsStartTime);\n      var result = null;\n\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n\n      this.self.postMessage({\n        action: 'probeTs',\n        result: result,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    };\n\n    _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n    ;\n\n    _proto.push = function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n    ;\n\n    _proto.setTimestampOffset = function setTimestampOffset(data) {\n      var timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n    };\n\n    _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n    };\n\n    _proto.setRemux = function setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n    ;\n\n    _proto.flush = function flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.endTimeline = function endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.alignGopsWith = function alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    };\n\n    return MessageHandlers;\n  }();\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/bcasey/Projects/videojs-http-streaming/src/transmuxer-worker.js */\n\nvar handleData_ = function handleData_(event, transmuxedData, callback) {\n  var _event$data$segment = event.data.segment,\n      type = _event$data$segment.type,\n      initSegment = _event$data$segment.initSegment,\n      captions = _event$data$segment.captions,\n      captionStreams = _event$data$segment.captionStreams,\n      metadata = _event$data$segment.metadata,\n      videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n      videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n  transmuxedData.buffer.push({\n    captions: captions,\n    captionStreams: captionStreams,\n    metadata: metadata\n  });\n  var boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  var result = {\n    type: type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n\n  callback(result);\n};\n\nvar handleDone_ = function handleDone_(_ref) {\n  var transmuxedData = _ref.transmuxedData,\n      callback = _ref.callback; // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\n\nvar handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\n\nvar processTransmux = function processTransmux(options) {\n  var transmuxer = options.transmuxer,\n      bytes = options.bytes,\n      audioAppendStart = options.audioAppendStart,\n      gopsToAlignWith = options.gopsToAlignWith,\n      remux = options.remux,\n      onData = options.onData,\n      onTrackInfo = options.onTrackInfo,\n      onAudioTimingInfo = options.onAudioTimingInfo,\n      onVideoTimingInfo = options.onVideoTimingInfo,\n      onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n      onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n      onId3 = options.onId3,\n      onCaptions = options.onCaptions,\n      onDone = options.onDone,\n      onEndedTimeline = options.onEndedTimeline,\n      onTransmuxerLog = options.onTransmuxerLog,\n      isEndOfTimeline = options.isEndOfTimeline;\n  var transmuxedData = {\n    buffer: []\n  };\n  var waitForEndedTimelineEvent = isEndOfTimeline;\n\n  var handleMessage = function handleMessage(event) {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData: transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith: gopsToAlignWith\n    });\n  }\n\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux: remux\n    });\n  }\n\n  if (bytes.byteLength) {\n    var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\n\nvar dequeue = function dequeue(transmuxer) {\n  transmuxer.currentTransmux = null;\n\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\n\nvar processAction = function processAction(transmuxer, action) {\n  transmuxer.postMessage({\n    action: action\n  });\n  dequeue(transmuxer);\n};\n\nvar enqueueAction = function enqueueAction(action, transmuxer) {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\n\nvar reset = function reset(transmuxer) {\n  enqueueAction('reset', transmuxer);\n};\n\nvar endTimeline = function endTimeline(transmuxer) {\n  enqueueAction('endTimeline', transmuxer);\n};\n\nvar transmux = function transmux(options) {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n\n  options.transmuxer.transmuxQueue.push(options);\n};\n\nvar createTransmuxer = function createTransmuxer(options) {\n  var transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  var term = transmuxer.terminate;\n\n  transmuxer.terminate = function () {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n\n  transmuxer.postMessage({\n    action: 'init',\n    options: options\n  });\n  return transmuxer;\n};\n\nvar segmentTransmuxer = {\n  reset: reset,\n  endTimeline: endTimeline,\n  transmux: transmux,\n  createTransmuxer: createTransmuxer\n};\n\nvar workerCallback = function workerCallback(options) {\n  var transmuxer = options.transmuxer;\n  var endAction = options.endAction || options.action;\n  var callback = options.callback;\n\n  var message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n\n  var listenForEndEvent = function listenForEndEvent(event) {\n    if (event.data.action !== endAction) {\n      return;\n    }\n\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n\n    callback(event.data);\n  };\n\n  transmuxer.addEventListener('message', listenForEndEvent);\n\n  if (options.data) {\n    var isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n    for (var i = 0; i < objects.length; i++) {\n      objects[i].bytes = bytes;\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar parseInitSegment = function parseInitSegment(segment, _callback) {\n  var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    var uri = segment.map.resolvedUri || segment.map.uri;\n    return _callback({\n      internal: true,\n      message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: function callback(_ref) {\n      var tracks = _ref.tracks,\n          data = _ref.data; // transfer bytes back to us\n\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n\n        segment.map.tracks[track.type] = track;\n\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return _callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n  var segment = _ref2.segment,\n      finishProcessingFn = _ref2.finishProcessingFn;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n    // until the key request is done to decrypt.\n\n    if (segment.map.key) {\n      segment.map.encryptedBytes = bytes;\n      return finishProcessingFn(null, segment);\n    }\n\n    segment.map.bytes = bytes;\n    parseInitSegment(segment, function (parseError) {\n      if (parseError) {\n        parseError.xhr = request;\n        parseError.status = request.status;\n        return finishProcessingFn(parseError, segment);\n      }\n\n      finishProcessingFn(null, segment);\n    });\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(_ref3) {\n  var segment = _ref3.segment,\n      finishProcessingFn = _ref3.finishProcessingFn,\n      responseType = _ref3.responseType;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n    // thrown for two primary cases:\n    // 1. the mime type override stops working, or is not implemented for a specific\n    //    browser\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(newBytes);\n    } else {\n      segment.bytes = new Uint8Array(newBytes);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar transmuxAndNotify = function transmuxAndNotify(_ref4) {\n  var segment = _ref4.segment,\n      bytes = _ref4.bytes,\n      trackInfoFn = _ref4.trackInfoFn,\n      timingInfoFn = _ref4.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n      id3Fn = _ref4.id3Fn,\n      captionsFn = _ref4.captionsFn,\n      isEndOfTimeline = _ref4.isEndOfTimeline,\n      endedTimelineFn = _ref4.endedTimelineFn,\n      dataFn = _ref4.dataFn,\n      doneFn = _ref4.doneFn,\n      onTransmuxerLog = _ref4.onTransmuxerLog;\n  var fmp4Tracks = segment.map && segment.map.tracks || {};\n  var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n  var finish = function finish() {\n    return transmux({\n      bytes: bytes,\n      transmuxer: segment.transmuxer,\n      audioAppendStart: segment.audioAppendStart,\n      gopsToAlignWith: segment.gopsToAlignWith,\n      remux: isMuxed,\n      onData: function onData(result) {\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        dataFn(segment, result);\n      },\n      onTrackInfo: function onTrackInfo(trackInfo) {\n        if (trackInfoFn) {\n          if (isMuxed) {\n            trackInfo.isMuxed = true;\n          }\n\n          trackInfoFn(segment, trackInfo);\n        }\n      },\n      onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n        // we only want the first start value we encounter\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n          audioStartFn(audioTimingInfo.start);\n          audioStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n          audioEndFn(audioTimingInfo.end);\n        }\n      },\n      onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n        // we only want the first start value we encounter\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n          videoStartFn(videoTimingInfo.start);\n          videoStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n          videoEndFn(videoTimingInfo.end);\n        }\n      },\n      onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n      },\n      onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n      },\n      onId3: function onId3(id3Frames, dispatchType) {\n        id3Fn(segment, id3Frames, dispatchType);\n      },\n      onCaptions: function onCaptions(captions) {\n        captionsFn(segment, [captions]);\n      },\n      isEndOfTimeline: isEndOfTimeline,\n      onEndedTimeline: function onEndedTimeline() {\n        endedTimelineFn();\n      },\n      onTransmuxerLog: onTransmuxerLog,\n      onDone: function onDone(result) {\n        if (!doneFn) {\n          return;\n        }\n\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        doneFn(null, segment, result);\n      }\n    });\n  }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: function callback(data) {\n      segment.bytes = bytes = data.data;\n      var probeResult = data.result;\n\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed: isMuxed\n        });\n        trackInfoFn = null;\n\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n\n      finish();\n    }\n  });\n};\n\nvar handleSegmentBytes = function handleSegmentBytes(_ref5) {\n  var segment = _ref5.segment,\n      bytes = _ref5.bytes,\n      trackInfoFn = _ref5.trackInfoFn,\n      timingInfoFn = _ref5.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n      id3Fn = _ref5.id3Fn,\n      captionsFn = _ref5.captionsFn,\n      isEndOfTimeline = _ref5.isEndOfTimeline,\n      endedTimelineFn = _ref5.endedTimelineFn,\n      dataFn = _ref5.dataFn,\n      doneFn = _ref5.doneFn,\n      onTransmuxerLog = _ref5.onTransmuxerLog;\n  var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only blacklist a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    var tracks = segment.map.tracks;\n    var trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    var finishLoading = function finishLoading(captions) {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n\n      doneFn(null, segment, {});\n    };\n\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref6) {\n        var data = _ref6.data,\n            startTime = _ref6.startTime; // transfer bytes back to us\n\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: function callback(message) {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(videojs.mergeOptions(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n\n  transmuxAndNotify({\n    segment: segment,\n    bytes: bytes,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  });\n};\n\nvar decrypt = function decrypt(_ref7, callback) {\n  var id = _ref7.id,\n      key = _ref7.key,\n      encryptedBytes = _ref7.encryptedBytes,\n      decryptionWorker = _ref7.decryptionWorker;\n\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  var keyBytes;\n\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(_ref8) {\n  var decryptionWorker = _ref8.decryptionWorker,\n      segment = _ref8.segment,\n      trackInfoFn = _ref8.trackInfoFn,\n      timingInfoFn = _ref8.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n      id3Fn = _ref8.id3Fn,\n      captionsFn = _ref8.captionsFn,\n      isEndOfTimeline = _ref8.isEndOfTimeline,\n      endedTimelineFn = _ref8.endedTimelineFn,\n      dataFn = _ref8.dataFn,\n      doneFn = _ref8.doneFn,\n      onTransmuxerLog = _ref8.onTransmuxerLog;\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker: decryptionWorker\n  }, function (decryptedBytes) {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment: segment,\n      bytes: segment.bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(_ref9) {\n  var activeXhrs = _ref9.activeXhrs,\n      decryptionWorker = _ref9.decryptionWorker,\n      trackInfoFn = _ref9.trackInfoFn,\n      timingInfoFn = _ref9.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n      id3Fn = _ref9.id3Fn,\n      captionsFn = _ref9.captionsFn,\n      isEndOfTimeline = _ref9.isEndOfTimeline,\n      endedTimelineFn = _ref9.endedTimelineFn,\n      dataFn = _ref9.dataFn,\n      doneFn = _ref9.doneFn,\n      onTransmuxerLog = _ref9.onTransmuxerLog;\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      var segmentFinish = function segmentFinish() {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker: decryptionWorker,\n            segment: segment,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n\n        handleSegmentBytes({\n          segment: segment,\n          bytes: segment.bytes,\n          trackInfoFn: trackInfoFn,\n          timingInfoFn: timingInfoFn,\n          videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n          id3Fn: id3Fn,\n          captionsFn: captionsFn,\n          isEndOfTimeline: isEndOfTimeline,\n          endedTimelineFn: endedTimelineFn,\n          dataFn: dataFn,\n          doneFn: doneFn,\n          onTransmuxerLog: onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker: decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, function (decryptedBytes) {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, function (parseError) {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n\n            segmentFinish();\n          });\n        });\n      }\n\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\n\nvar handleLoadEnd = function handleLoadEnd(_ref10) {\n  var loadendState = _ref10.loadendState,\n      abortFn = _ref10.abortFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n      abortFn();\n      loadendState.calledAbortFn = true;\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(_ref11) {\n  var segment = _ref11.segment,\n      progressFn = _ref11.progressFn;\n  _ref11.trackInfoFn;\n  _ref11.timingInfoFn;\n  _ref11.videoSegmentTimingInfoFn;\n  _ref11.audioSegmentTimingInfoFn;\n  _ref11.id3Fn;\n  _ref11.captionsFn;\n  _ref11.isEndOfTimeline;\n  _ref11.endedTimelineFn;\n  _ref11.dataFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted) {\n      return;\n    }\n\n    segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n  var xhr = _ref12.xhr,\n      xhrOptions = _ref12.xhrOptions,\n      decryptionWorker = _ref12.decryptionWorker,\n      segment = _ref12.segment,\n      abortFn = _ref12.abortFn,\n      progressFn = _ref12.progressFn,\n      trackInfoFn = _ref12.trackInfoFn,\n      timingInfoFn = _ref12.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n      id3Fn = _ref12.id3Fn,\n      captionsFn = _ref12.captionsFn,\n      isEndOfTimeline = _ref12.isEndOfTimeline,\n      endedTimelineFn = _ref12.endedTimelineFn,\n      dataFn = _ref12.dataFn,\n      doneFn = _ref12.doneFn,\n      onTransmuxerLog = _ref12.onTransmuxerLog;\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion({\n    activeXhrs: activeXhrs,\n    decryptionWorker: decryptionWorker,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var objects = [segment.key];\n\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n\n    var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n    if (differentMapKey) {\n      var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n\n    var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn\n    });\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse({\n    segment: segment,\n    finishProcessingFn: finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment: segment,\n    progressFn: progressFn,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  var loadendState = {};\n  activeXhrs.forEach(function (activeXhr) {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState: loadendState,\n      abortFn: abortFn\n    }));\n  });\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n\nvar logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\n\nvar isMaat = function isMaat(master, media) {\n  var mediaAttributes = media.attributes || {};\n  return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\n\nvar isMuxed = function isMuxed(master, media) {\n  if (!isMaat(master, media)) {\n    return true;\n  }\n\n  var mediaAttributes = media.attributes || {};\n  var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n  for (var groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar unwrapCodecList = function unwrapCodecList(codecList) {\n  var codecs = {};\n  codecList.forEach(function (_ref) {\n    var mediaType = _ref.mediaType,\n        type = _ref.type,\n        details = _ref.details;\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n      codecs[mediaType] = null;\n      return;\n    }\n\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\n\nvar codecCount = function codecCount(codecObj) {\n  var count = 0;\n\n  if (codecObj.audio) {\n    count++;\n  }\n\n  if (codecObj.video) {\n    count++;\n  }\n\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\n\nvar codecsForPlaylist = function codecsForPlaylist(master, media) {\n  var mediaAttributes = media.attributes || {};\n  var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(master, media) && !codecInfo.audio) {\n    if (!isMuxed(master, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n\n  return codecInfo;\n};\n\nvar logFn = logger('PlaylistSelector');\n\nvar representationToString = function representationToString(representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n\n  var playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  if (!el) {\n    return '';\n  }\n\n  var result = window.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth;\n  var rightBandwidth;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth;\n  var rightWidth;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} masterPlaylistController\n *        the current masterPlaylistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n  // If we end up getting called before `master` is available, exit early\n  if (!master) {\n    return;\n  }\n\n  var options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n  };\n  var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(master)) {\n    playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n  var sortedPlaylistReps = playlists.map(function (playlist) {\n    var bandwidth;\n    var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (_chosenRep && _chosenRep.playlist) {\n      var type = 'sortedPlaylistReps';\n\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n      return _chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList;\n  var resolutionPlusOneSmallest;\n  var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  if (chosenRep && chosenRep.playlist) {\n    var _type = 'sortedPlaylistReps';\n\n    if (resolutionPlusOneRep) {\n      _type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      _type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      _type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      _type = 'enabledPlaylistReps';\n    }\n\n    logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n    return chosenRep.playlist;\n  }\n\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\n\nvar movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n  var average = -1;\n  var lastSystemBandwidth = -1;\n\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n\n  return function () {\n    var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n\n    return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  var _this = this; // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n\n\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\n\n\nvar concatSegments = function concatSegments(segmentObj) {\n  var offset = 0;\n  var tempBuffer;\n\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(function (segment) {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n\n  return tempBuffer;\n};\n/**\n * @file text-tracks.js\n */\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-608'\n    });\n    var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n\n    var track = tech.textTracks().getTrackById(instreamId);\n\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      var label = captionStream;\n      var language = captionStream;\n      var def = false;\n      var captionService = captionServices[instreamId];\n\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService[\"default\"];\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        \"default\": def,\n        label: label,\n        language: language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\n\nvar addMetadata = function addMetadata(_ref2) {\n  var inbandTextTracks = _ref2.inbandTextTracks,\n      metadataArray = _ref2.metadataArray,\n      timestampOffset = _ref2.timestampOffset,\n      videoDuration = _ref2.videoDuration;\n\n  if (!metadataArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  var metadataTrack = inbandTextTracks.metadataTrack_;\n\n  if (!metadataTrack) {\n    return;\n  }\n\n  metadataArray.forEach(function (metadata) {\n    var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n\n    metadata.frames.forEach(function (frame) {\n      var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n\n  var cues = metadataTrack.cues;\n  var cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (var i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n\n  var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n    var timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach(function (startTime, idx) {\n    var cueGroup = cuesGroupedByStartTime[startTime];\n    var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(function (cue) {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\n\nvar createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i;\n  var cue;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\n\nvar removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n  var cues = track.cues;\n\n  if (!cues) {\n    return;\n  }\n\n  for (var i = 0; i < cues.length; i++) {\n    var duplicates = [];\n    var occurrences = 0;\n\n    for (var j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n\n    if (duplicates.length) {\n      duplicates.forEach(function (dupe) {\n        return track.removeCue(dupe);\n      });\n    }\n  }\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  var i;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  var endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar shallowEqual = function shallowEqual(a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n\n  var akeys = Object.keys(a).sort();\n  var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < akeys.length; i++) {\n    var key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\nvar QUOTA_EXCEEDED_ERR = 22;\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nvar getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  var timelineSegments = [];\n  var time = 0;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\n\nvar MIN_BACK_BUFFER = 1; // in ms\n\nvar CHECK_BUFFER_DELAY = 500;\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n}; // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\n\nvar MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var startOfSegment = segmentInfo.startOfSegment,\n      duration = segmentInfo.duration,\n      segment = segmentInfo.segment,\n      part = segmentInfo.part,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      partIndex = segmentInfo.partIndex,\n      timeline = segmentInfo.timeline;\n  var segmentLen = segments.length - 1;\n  var selection = 'mediaIndex/partIndex increment';\n\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n\n  var hasPartIndex = typeof partIndex === 'number';\n  var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n};\n\nvar timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n  return mediaType + \"TimingInfo\";\n};\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\n\nvar timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n  var segmentTimeline = _ref.segmentTimeline,\n      currentTimeline = _ref.currentTimeline,\n      startOfSegment = _ref.startOfSegment,\n      buffered = _ref.buffered,\n      overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\n\nvar shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n  var timelineChangeController = _ref2.timelineChangeController,\n      currentTimeline = _ref2.currentTimeline,\n      segmentTimeline = _ref2.segmentTimeline,\n      loaderType = _ref2.loaderType,\n      audioDisabled = _ref2.audioDisabled;\n\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n\n  if (loaderType === 'audio') {\n    var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n\n  if (loaderType === 'main' && audioDisabled) {\n    var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nvar mediaDuration = function mediaDuration(audioTimingInfo, videoTimingInfo) {\n  var audioDuration = audioTimingInfo && typeof audioTimingInfo.start === 'number' && typeof audioTimingInfo.end === 'number' ? audioTimingInfo.end - audioTimingInfo.start : 0;\n  var videoDuration = videoTimingInfo && typeof videoTimingInfo.start === 'number' && typeof videoTimingInfo.end === 'number' ? videoTimingInfo.end - videoTimingInfo.start : 0;\n  return Math.max(audioDuration, videoDuration);\n};\n\nvar segmentTooLong = function segmentTooLong(_ref3) {\n  var segmentDuration = _ref3.segmentDuration,\n      maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\n\nvar getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n\n  var segmentDuration = mediaDuration(segmentInfo.audioTimingInfo, segmentInfo.videoTimingInfo); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n\n  var targetDuration = segmentInfo.playlist.targetDuration;\n  var isSegmentWayTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  var isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration\n  });\n  var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings, options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null;\n    _this.partIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.vhs_ = settings.vhs;\n    _this.loaderType_ = settings.loaderType;\n    _this.currentMediaInfo_ = void 0;\n    _this.startingMediaInfo_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.sourceUpdater_ = settings.sourceUpdater;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n    _this.timelineChangeController_ = settings.timelineChangeController;\n    _this.shouldSaveSegmentTimingInfo_ = true;\n    _this.parse708captions_ = settings.parse708captions; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.xhrOptions_ = null;\n    _this.pendingSegments_ = [];\n    _this.audioDisabled_ = false;\n    _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    _this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    _this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    _this.loadQueue_ = [];\n    _this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    _this.waitingOnRemove_ = false;\n    _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {};\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    _this.transmuxer_ = _this.createTransmuxer_();\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      if (!_this.isEndOfStream_()) {\n        _this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n    Object.defineProperty(_assertThisInitialized(_this), 'state', {\n      get: function get() {\n        return this.state_;\n      },\n      set: function set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + \" -> \" + newState);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n\n    _this.sourceUpdater_.on('ready', function () {\n      if (_this.hasEnoughInfoToAppend_()) {\n        _this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'main') {\n      _this.timelineChangeController_.on('pendingtimelinechange', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'audio') {\n      _this.timelineChangeController_.on('timelinechange', function () {\n        if (_this.hasEnoughInfoToLoad_()) {\n          _this.processLoadQueue_();\n        }\n\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = SegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n\n    this.resetStats_();\n\n    if (this.checkBufferTimeout_) {\n      window.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n\n    this.off();\n  };\n\n  _proto.setAudio = function setAudio(enable) {\n    this.audioDisabled_ = !enable;\n\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n  ;\n\n  _proto.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n\n      return;\n    }\n\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n  ;\n\n  _proto.abort_ = function abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  };\n\n  _proto.checkForAbort_ = function checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n  ;\n\n  _proto.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.logger_('error occurred:', _error);\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  _proto.endOfStream = function endOfStream() {\n    this.ended_ = true;\n\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    var trackInfo = this.getMediaInfo_();\n\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return videojs.createTimeRanges();\n    }\n\n    if (this.loaderType_ === 'main') {\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n  ;\n\n  _proto.segmentKey = function segmentKey(key, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!key) {\n      return null;\n    }\n\n    var id = segmentKeyId(key);\n    var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n\n    var result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n  ;\n\n  _proto.load = function load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n  ;\n\n  _proto.playlist = function playlist(newPlaylist, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n\n    var oldId = null;\n\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n\n    this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must \"resync\" the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        this.resyncLoader();\n      }\n\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          var mediaIndex = this.mediaIndex;\n          this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n  ;\n\n  _proto.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n  ;\n\n  _proto.resetEverything = function resetEverything(done) {\n    this.ended_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n  ;\n\n  _proto.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n  ;\n\n  _proto.resyncLoader = function resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n  ;\n\n  _proto.remove = function remove(start, end, done, force) {\n    if (done === void 0) {\n      done = function done() {};\n    }\n\n    if (force === void 0) {\n      force = false;\n    } // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n\n\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n\n    var removesRemaining = 1;\n\n    var removeFinished = function removeFinished() {\n      removesRemaining--;\n\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n\n    for (var track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n  ;\n\n  _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n    if (mediaIndex === void 0) {\n      mediaIndex = this.mediaIndex;\n    }\n\n    if (playlist === void 0) {\n      playlist = this.playlist_;\n    }\n\n    if (partIndex === void 0) {\n      partIndex = this.partIndex;\n    }\n\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n\n    var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n  ;\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    var bufferedEnd = lastBufferedEnd(this.buffered_()) || 0;\n    var bufferedTime = Math.max(0, bufferedEnd - this.currentTime_());\n    var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    var segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    var next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      var segment = segments[this.mediaIndex];\n      var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      }),\n          segmentIndex = _Playlist$getMediaInf.segmentIndex,\n          startTime = _Playlist$getMediaInf.startTime,\n          _partIndex = _Playlist$getMediaInf.partIndex;\n\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? 'bufferedEnd' : 'currentTime';\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = _partIndex;\n    }\n\n    var nextSegment = segments[next.mediaIndex];\n    var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n    }\n\n    var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n\n    return this.generateSegmentInfo_(next);\n  };\n\n  _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n    var playlist = options.playlist,\n        mediaIndex = options.mediaIndex,\n        startOfSegment = options.startOfSegment,\n        isSyncRequest = options.isSyncRequest,\n        partIndex = options.partIndex,\n        forceTimestampOffset = options.forceTimestampOffset,\n        getMediaInfoForTime = options.getMediaInfoForTime;\n    var segment = playlist.segments[mediaIndex];\n    var part = typeof partIndex === 'number' && segment.parts[partIndex];\n    var segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment,\n      part: part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime: getMediaInfoForTime\n    };\n    var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment: startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck: overrideCheck\n    });\n    var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n  ;\n\n  _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.vhs_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  };\n\n  _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n    this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n  ;\n\n  _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n\n  _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n    var _this2 = this;\n\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    var captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(function (caption) {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      var captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(function (trackName) {\n      var _captionTracks$trackN = captionTracks[trackName],\n          startTime = _captionTracks$trackN.startTime,\n          endTime = _captionTracks$trackN.endTime,\n          captions = _captionTracks$trackN.captions;\n      var inbandTextTracks = _this2.inbandTextTracks_;\n\n      _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n      createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks: inbandTextTracks,\n        timestampOffset: timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  };\n\n  _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset: timestampOffset,\n      videoDuration: this.duration_()\n    });\n  };\n\n  _proto.processMetadataQueue_ = function processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.caption.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  };\n\n  _proto.processCallQueue_ = function processCallQueue_() {\n    var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(function (fun) {\n      return fun();\n    });\n  };\n\n  _proto.processLoadQueue_ = function processLoadQueue_() {\n    var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(function (fun) {\n      return fun();\n    });\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n  ;\n\n  _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n\n    var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n\n    if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  };\n\n  _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  };\n\n  _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.handleData_ = function handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      var trackInfo = this.getCurrentMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var firstVideoFrameTimeForData;\n\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo: useVideoTimingInfo,\n        firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  };\n\n  _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  };\n\n  _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n    var type = _ref4.type,\n        initSegment = _ref4.initSegment,\n        map = _ref4.map,\n        playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n    if (map) {\n      var id = initSegmentId(map);\n\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n\n    return null;\n  };\n\n  _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n    var _this3 = this;\n\n    var segmentInfo = _ref5.segmentInfo,\n        type = _ref5.type,\n        bytes = _ref5.bytes;\n    var audioBuffered = this.sourceUpdater_.audioBuffered();\n    var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n\n    var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n    var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n    this.remove(0, timeToRemoveUntil, function () {\n      _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n      _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      _this3.quotaExceededErrorRetryTimeout_ = window.setTimeout(function () {\n        _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n        _this3.quotaExceededErrorRetryTimeout_ = null;\n\n        _this3.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  };\n\n  _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n    var segmentInfo = _ref6.segmentInfo,\n        type = _ref6.type,\n        bytes = _ref6.bytes; // if there's no error, nothing to do\n\n    if (!error) {\n      return;\n    }\n\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  };\n\n  _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n    var segmentInfo = _ref7.segmentInfo,\n        type = _ref7.type,\n        initSegment = _ref7.initSegment,\n        data = _ref7.data,\n        bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n    if (!bytes) {\n      var segments = [data];\n      var byteLength = data.byteLength;\n\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments: segments\n      });\n    }\n\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n  };\n\n  _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n\n    var segment = this.pendingSegment_.segment;\n    var timingInfoProperty = type + \"TimingInfo\";\n\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  };\n\n  _proto.appendData_ = function appendData_(segmentInfo, result) {\n    var type = result.type,\n        data = result.data;\n\n    if (!data || !data.byteLength) {\n      return;\n    }\n\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n\n    var initSegment = this.getInitSegmentAndUpdateState_({\n      type: type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo: segmentInfo,\n      type: type,\n      initSegment: initSegment,\n      data: data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n    var _this4 = this;\n\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(function () {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        var options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n\n        _extends(segmentInfo, _this4.generateSegmentInfo_(options));\n\n        _this4.isPendingTimestampOffset_ = false;\n\n        _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  };\n\n  _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n    var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n\n    var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    var isWalkingForward = this.mediaIndex !== null;\n    var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: function endedTimelineFn() {\n        _this5.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: function onTransmuxerLog(_ref8) {\n        var message = _ref8.message,\n            level = _ref8.level,\n            stream = _ref8.stream;\n\n        _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n  ;\n\n  _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n  ;\n\n  _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n\n    return simpleSegment;\n  };\n\n  _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  };\n\n  _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  };\n\n  _proto.handleTimeout_ = function handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  };\n\n  _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n    var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  };\n\n  _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  };\n\n  _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n    var currentStart = _ref9.currentStart,\n        playlist = _ref9.playlist,\n        mediaIndex = _ref9.mediaIndex,\n        firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n        currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n        useVideoTimingInfo = _ref9.useVideoTimingInfo,\n        videoTimingInfo = _ref9.videoTimingInfo,\n        audioTimingInfo = _ref9.audioTimingInfo;\n\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n\n    var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n\n    return videoTimingInfo.start;\n  };\n\n  _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n    var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n    var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  };\n\n  _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n\n    segmentInfo.waitingOnAppends--;\n\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  };\n\n  _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n\n    var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= segmentInfo.timingInfo.start; // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    var trackInfo = this.getMediaInfo_();\n    var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleAppendsDone_ = function handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n\n    var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n        return;\n      }\n    }\n\n    this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    var segment = segmentInfo.segment; // If we previously appended a segment that ends more than 3 targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n      this.resetEverything();\n      return;\n    }\n\n    var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n\n    this.trigger('appended');\n\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n  ;\n\n  _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n  ;\n\n  _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    var value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs.EventTarget);\n\nfunction noop() {}\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n\nvar bufferTypes = ['video', 'audio'];\n\nvar _updating = function updating(type, sourceUpdater) {\n  var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\n\nvar nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n  for (var i = 0; i < queue.length; i++) {\n    var queueEntry = queue[i];\n\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nvar shiftQueue = function shiftQueue(type, sourceUpdater) {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n\n  var queueIndex = 0;\n  var queueEntry = sourceUpdater.queue[queueIndex];\n\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n\n    return;\n  }\n\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n    return;\n  }\n\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\n\nvar cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n  var buffer = sourceUpdater[type + \"Buffer\"];\n  var titleType = toTitleCase(type);\n\n  if (!buffer) {\n    return;\n  }\n\n  buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n  buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[type + \"Buffer\"] = null;\n};\n\nvar inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n  return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n};\n\nvar actions = {\n  appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.appendBuffer(bytes);\n      } catch (e) {\n        sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n        sourceUpdater.queuePending[type] = null;\n        onError(e);\n      }\n    };\n  },\n  remove: function remove(start, end) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.remove(start, end);\n      } catch (e) {\n        sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n      }\n    };\n  },\n  timestampOffset: function timestampOffset(offset) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n      sourceBuffer.timestampOffset = offset;\n    };\n  },\n  callback: function callback(_callback) {\n    return function (type, sourceUpdater) {\n      _callback();\n    };\n  },\n  endOfStream: function endOfStream(error) {\n    return function (sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n      try {\n        sourceUpdater.mediaSource.endOfStream(error);\n      } catch (e) {\n        videojs.log.warn('Failed to call media source endOfStream', e);\n      }\n    };\n  },\n  duration: function duration(_duration) {\n    return function (sourceUpdater) {\n      sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n      try {\n        sourceUpdater.mediaSource.duration = _duration;\n      } catch (e) {\n        videojs.log.warn('Failed to set media source duration', e);\n      }\n    };\n  },\n  abort: function abort() {\n    return function (type, sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.abort();\n      } catch (e) {\n        videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  addSourceBuffer: function addSourceBuffer(type, codec) {\n    return function (sourceUpdater) {\n      var titleType = toTitleCase(type);\n      var mime = getMimeForCodec(codec);\n      sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n      var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n      sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n      sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n      sourceUpdater.codecs[type] = codec;\n      sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n    };\n  },\n  removeSourceBuffer: function removeSourceBuffer(type) {\n    return function (sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n      try {\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n      } catch (e) {\n        videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  changeType: function changeType(codec) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      } // do not update codec if we don't need to.\n\n\n      if (sourceUpdater.codecs[type] === codec) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    };\n  }\n};\n\nvar pushQueue = function pushQueue(_ref) {\n  var type = _ref.type,\n      sourceUpdater = _ref.sourceUpdater,\n      action = _ref.action,\n      doneFn = _ref.doneFn,\n      name = _ref.name;\n  sourceUpdater.queue.push({\n    type: type,\n    action: action,\n    doneFn: doneFn,\n    name: name\n  });\n  shiftQueue(type, sourceUpdater);\n};\n\nvar onUpdateend = function onUpdateend(type, sourceUpdater) {\n  return function (e) {\n    // Although there should, in theory, be a pending action for any updateend receieved,\n    // there are some actions that may trigger updateend events without set definitions in\n    // the w3c spec. For instance, setting the duration on the media source may trigger\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\n    // if we encounter an updateend without a corresponding pending action from our queue\n    // for that source buffer type, process the next action.\n    if (sourceUpdater.queuePending[type]) {\n      var doneFn = sourceUpdater.queuePending[type].doneFn;\n      sourceUpdater.queuePending[type] = null;\n\n      if (doneFn) {\n        // if there's an error, report it\n        doneFn(sourceUpdater[type + \"Error_\"]);\n      }\n    }\n\n    shiftQueue(type, sourceUpdater);\n  };\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\n\nvar SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n  function SourceUpdater(mediaSource) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.mediaSource = mediaSource;\n\n    _this.sourceopenListener_ = function () {\n      return shiftQueue('mediaSource', _assertThisInitialized(_this));\n    };\n\n    _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n    _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    _this.audioTimestampOffset_ = 0;\n    _this.videoTimestampOffset_ = 0;\n    _this.queue = [];\n    _this.queuePending = {\n      audio: null,\n      video: null\n    };\n    _this.delayedAudioAppendQueue_ = [];\n    _this.videoAppendQueued_ = false;\n    _this.codecs = {};\n    _this.onVideoUpdateEnd_ = onUpdateend('video', _assertThisInitialized(_this));\n    _this.onAudioUpdateEnd_ = onUpdateend('audio', _assertThisInitialized(_this));\n\n    _this.onVideoError_ = function (e) {\n      // used for debugging\n      _this.videoError_ = e;\n    };\n\n    _this.onAudioError_ = function (e) {\n      // used for debugging\n      _this.audioError_ = e;\n    };\n\n    _this.createdSourceBuffers_ = false;\n    _this.initializedEme_ = false;\n    _this.triggeredReady_ = false;\n    return _this;\n  }\n\n  var _proto = SourceUpdater.prototype;\n\n  _proto.initializedEme = function initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  };\n\n  _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  };\n\n  _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n    return this.initializedEme_;\n  };\n\n  _proto.ready = function ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  };\n\n  _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  };\n\n  _proto.triggerReady = function triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n  ;\n\n  _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n  ;\n\n  _proto.abort = function abort(type) {\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n  ;\n\n  _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n  ;\n\n  _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  SourceUpdater.canChangeType = function canChangeType() {\n    return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  _proto.canChangeType = function canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n  ;\n\n  _proto.changeType = function changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n  ;\n\n  _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n    var _this2 = this;\n\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n\n    Object.keys(codecs).forEach(function (type) {\n      var codec = codecs[type];\n\n      if (!_this2.hasCreatedSourceBuffers()) {\n        return _this2.addSourceBuffer(type, codec);\n      }\n\n      if (_this2.canChangeType()) {\n        _this2.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n  ;\n\n  _proto.appendBuffer = function appendBuffer(options, doneFn) {\n    var _this3 = this;\n\n    var segmentInfo = options.segmentInfo,\n        type = options.type,\n        bytes = options.bytes;\n    this.processedAppend_ = true;\n\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n\n    var onError = doneFn;\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn: doneFn,\n      name: 'appendBuffer'\n    });\n\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n\n      var queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(function (que) {\n        _this3.appendBuffer.apply(_this3, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n  ;\n\n  _proto.audioBuffered = function audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n  ;\n\n  _proto.videoBuffered = function videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n  ;\n\n  _proto.setDuration = function setDuration(duration, doneFn) {\n    if (doneFn === void 0) {\n      doneFn = noop;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n  ;\n\n  _proto.endOfStream = function endOfStream(error, doneFn) {\n    if (error === void 0) {\n      error = null;\n    }\n\n    if (doneFn === void 0) {\n      doneFn = noop;\n    }\n\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeAudio = function removeAudio(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeVideo = function removeVideo(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n  ;\n\n  _proto.updating = function updating() {\n    // the audio/video source buffer is updating\n    if (_updating('audio', this) || _updating('video', this)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.audioQueueCallback = function audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.videoQueueCallback = function videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this4 = this;\n\n    this.trigger('dispose');\n    bufferTypes.forEach(function (type) {\n      _this4.abort(type);\n\n      if (_this4.canRemoveSourceBuffer()) {\n        _this4.removeSourceBuffer(type);\n      } else {\n        _this4[type + \"QueueCallback\"](function () {\n          return cleanupBuffer(type, _this4);\n        });\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n\n    this.off();\n  };\n\n  return SourceUpdater;\n}(videojs.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n  return _char3.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n  _inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.loaderType_ = 'subtitle';\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    _this.shouldSaveSegmentTimingInfo_ = false;\n    return _this;\n  }\n\n  var _proto = VTTSegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return videojs.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n    return videojs.createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n  ;\n\n  _proto.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n  ;\n\n  _proto.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    var _this2 = this; // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this2.state = 'READY';\n\n        if (!_this2.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this2.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n    return null;\n  };\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n  ;\n\n  _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n\n    return segmentInfo;\n  };\n\n  _proto.stopForError = function stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    var _this3 = this;\n\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n\n      this.stopForError(error);\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    var segment = segmentInfo.segment;\n\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      var loadHandler;\n\n      var errorHandler = function errorHandler() {\n        _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n        _this3.stopForError({\n          message: 'Error loading vtt.js'\n        });\n\n        return;\n      };\n\n      loadHandler = function loadHandler() {\n        _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n        _this3.segmentRequestFinished_(error, simpleSegment, result);\n      };\n\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  };\n\n  _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n  ;\n\n  _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder;\n    var decodeBytesToString = false;\n\n    if (typeof window.TextDecoder === 'function') {\n      decoder = new window.TextDecoder('utf8');\n    } else {\n      decoder = window.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n    parser.ontimestampmap = function (map) {\n      segmentInfo.timestampmap = map;\n    };\n\n    parser.onparsingerror = function (error) {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n  ;\n\n  _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n            adOffset = _segment$cueOutCont$s[0],\n            adTotal = _segment$cueOutCont$s[1];\n\n        cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (duration !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n\n    var syncPoint = null;\n    var lastDistance = null;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n      if (!datetimeMapping) {\n        continue;\n      }\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (var z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n    var partsAndSegments = getPartsAndSegments(playlist);\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SyncController, _videojs$EventTarget);\n\n  function SyncController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.timelineToDatetimeMappings = {};\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n\n  var _proto = SyncController.prototype;\n\n  _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n  ;\n\n  _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n  ;\n\n  _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n  ;\n\n  _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n  ;\n\n  _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n  ;\n\n  _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var firstSegment = playlist.segments[0];\n      var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n  ;\n\n  _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n    var segmentInfo = _ref.segmentInfo,\n        shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n    var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    var segment = segmentInfo.segment;\n\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n\n    var dateTime = segment.dateTimeObject;\n\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  };\n\n  _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].time;\n  };\n\n  _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n  ;\n\n  _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n    var start;\n    var end;\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n      }\n\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n  ;\n\n  _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.off();\n  };\n\n  return SyncController;\n}(videojs.EventTarget);\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\n\nvar TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n  function TimelineChangeController() {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.pendingTimelineChanges_ = {};\n    _this.lastTimelineChanges_ = {};\n    return _this;\n  }\n\n  var _proto = TimelineChangeController.prototype;\n\n  _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  };\n\n  _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n    var type = _ref.type,\n        from = _ref.from,\n        to = _ref.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n\n    return this.pendingTimelineChanges_[type];\n  };\n\n  _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n    var type = _ref2.type,\n        from = _ref2.from,\n        to = _ref2.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n\n    return this.lastTimelineChanges_[type];\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  };\n\n  return TimelineChangeController;\n}(videojs.EventTarget);\n/* rollup-plugin-worker-factory start for worker!/Users/bcasey/Projects/videojs-http-streaming/src/decrypter-worker.js */\n\n\nvar workerCode = transform(getWorkerString(function () {\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function require(path, base) {\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n\n  var createClass = createCommonjsModule(function (module) {\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    module.exports = _createClass;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var inheritsLoose = createCommonjsModule(function (module) {\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      setPrototypeOf(subClass, superClass);\n    }\n\n    module.exports = _inheritsLoose;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 3.1.2 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n\n  var precompute = function precompute() {\n    var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    var encTable = tables[0];\n    var decTable = tables[1];\n    var sbox = encTable[4];\n    var sboxInv = decTable[4];\n    var i;\n    var x;\n    var xInv;\n    var d = [];\n    var th = [];\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n\n    return tables;\n  };\n\n  var aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  var AES = /*#__PURE__*/function () {\n    function AES(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      var i;\n      var j;\n      var tmp;\n      var sbox = this._tables[0][4];\n      var decTable = this._tables[1];\n      var keyLen = key.length;\n      var rcon = 1;\n\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n\n      var encKey = key.slice(0);\n      var decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n\n    var _proto = AES.prototype;\n\n    _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2;\n      var b2;\n      var c2; // key.length === 2 ?\n\n      var nInnerRounds = key.length / 4 - 2;\n      var i;\n      var kIndex = 4;\n      var table = this._tables[1]; // load up the tables\n\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    };\n\n    return AES;\n  }();\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n\n  var AsyncStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(AsyncStream, _Stream);\n\n    function AsyncStream() {\n      var _this;\n\n      _this = _Stream.call(this, Stream) || this;\n      _this.jobs = [];\n      _this.delay = 1;\n      _this.timeout_ = null;\n      return _this;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n\n    var _proto = AsyncStream.prototype;\n\n    _proto.processJob_ = function processJob_() {\n      this.jobs.shift()();\n\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n    ;\n\n    _proto.push = function push(job) {\n      this.jobs.push(job);\n\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    };\n\n    return AsyncStream;\n  }(Stream);\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n\n  var ntoh = function ntoh(word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n\n  var decrypt = function decrypt(encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    var init0;\n    var init1;\n    var init2;\n    var init3;\n    var encrypted0;\n    var encrypted1;\n    var encrypted2;\n    var encrypted3; // iteration variable\n\n    var wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n\n  var Decrypter = /*#__PURE__*/function () {\n    function Decrypter(encrypted, key, initVector, done) {\n      var step = Decrypter.STEP;\n      var encrypted32 = new Int32Array(encrypted.buffer);\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n\n    var _proto = Decrypter.prototype;\n    /**\n     * @private\n     */\n\n    _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    };\n\n    createClass(Decrypter, null, [{\n      key: \"STEP\",\n      get: function get() {\n        // 4 * 8000;\n        return 32000;\n      }\n    }]);\n    return Decrypter;\n  }();\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (ArrayBuffer.isView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n\n  self.onmessage = function (event) {\n    var data = event.data;\n    var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/bcasey/Projects/videojs-http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup || activeGroup.isMasterPlaylist) {\n      // there is no group active or active group is a main playlist and won't change\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onGroupChanging = function onGroupChanging(type, settings) {\n  return function () {\n    var segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    mediaType.lastGroup_ = null;\n    segmentLoader.abort();\n    segmentLoader.pause();\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (activeGroup.isMasterPlaylist) {\n      // track did not change, do nothing\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n        return;\n      }\n\n      var mpc = settings.vhs.masterPlaylistController_;\n      var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n      if (mpc.media() === newPlaylist) {\n        return;\n      }\n\n      mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n      masterPlaylistLoader.pause();\n      mainSegmentLoader.resetEverything();\n      mpc.fastQualityChange_(newPlaylist);\n      return;\n    }\n\n    if (type === 'AUDIO') {\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\n        // playlist loader for the audio group), we want to do a destructive reset of the\n        // main segment loader and not restart the audio loaders\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n        // it should be stopped\n\n        mainSegmentLoader.resetEverything();\n        return;\n      } // although the segment loader is an audio segment loader, call the setAudio\n      // function to ensure it is prepared to re-append the init segment (or handle other\n      // config changes)\n\n\n      segmentLoader.setAudio(true);\n      mainSegmentLoader.setAudio(false);\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        logger_ = _settings$mediaTypes$.logger_,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n    var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n\n      if (audioOnlyMaster) {\n        mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n      }\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (audioOnlyMaster) {\n          logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n          properties.isMasterPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          var playlists = properties.playlists.filter(function (p) {\n            return p.excludeUntil !== Infinity;\n          });\n\n          if (!playlists.length) {\n            return;\n          }\n\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          \"default\": properties[\"default\"] && properties.autoselect\n        };\n\n        if (captionServices[newProps.instreamId]) {\n          newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n        }\n\n        if (newProps[\"default\"] === undefined) {\n          delete newProps[\"default\"];\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            \"default\": newProps[\"default\"],\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\nvar groupMatch = function groupMatch(list, media) {\n  for (var i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null; // set to variants to main media active group\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    var groupKeys = Object.keys(groups);\n\n    if (!variants) {\n      // find the masterPlaylistLoader media\n      // that is in a media group if we are dealing\n      // with audio only\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n        for (var i = 0; i < groupKeys.length; i++) {\n          var groupPropertyList = groups[groupKeys[i]];\n\n          if (groupMatch(groupPropertyList, media)) {\n            variants = groupPropertyList;\n            break;\n          }\n        } // use the main group if it exists\n\n      } else if (groups.main) {\n        variants = groups.main; // only one group, use that one\n      } else if (groupKeys.length === 1) {\n        variants = groups[groupKeys[0]];\n      }\n    }\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null || !variants) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\nvar getActiveGroup = function getActiveGroup(type, _ref) {\n  var mediaTypes = _ref.mediaTypes;\n  return function () {\n    var activeTrack_ = mediaTypes[type].activeTrack();\n\n    if (!activeTrack_) {\n      return null;\n    }\n\n    return mediaTypes[type].activeGroup(activeTrack_);\n  };\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      vhs = settings.vhs,\n      _settings$segmentLoad3 = settings.segmentLoaders,\n      audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n      mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n  if (audioGroup) {\n    var groupId = (audioGroup.filter(function (group) {\n      return group[\"default\"];\n    })[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n  masterPlaylistLoader.on('mediachanging', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanging();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(\"MediaGroups[\" + type + \"]\")\n    };\n  });\n  return mediaTypes;\n};\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      nextPlaylist = _ref.nextPlaylist,\n      forwardBuffer = _ref.forwardBuffer,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      bufferHighWaterLine = _ref.bufferHighWaterLine,\n      duration = _ref.duration,\n      experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n\n  var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id; // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist || !currentPlaylist.endList) {\n    log(sharedLogLine + \" as current playlist \" + (!currentPlaylist ? 'is not set' : 'is live'));\n    return true;\n  } // no need to switch playlist is the same\n\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  }\n\n  var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n    return true;\n  }\n\n  var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n    if (experimentalBufferBasedABR) {\n      logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n    }\n\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n\n  if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n    if (experimentalBufferBasedABR) {\n      _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n    }\n\n    log(_logLine);\n    return true;\n  }\n\n  log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    var src = options.src,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externVhs = options.externVhs,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        experimentalBufferBasedABR = options.experimentalBufferBasedABR;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n\n    var maxPlaylistRetries = options.maxPlaylistRetries;\n\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n\n    Vhs$1 = externVhs;\n    _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.vhs_ = tech.vhs;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.maxPlaylistRetries = maxPlaylistRetries;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      maxPlaylistRetries: maxPlaylistRetries,\n      timeout: null\n    };\n\n    _this.on('error', _this.pauseLoading);\n\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new window.MediaSource();\n    _this.handleDurationChange_ = _this.handleDurationChange_.bind(_assertThisInitialized(_this));\n    _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(_assertThisInitialized(_this));\n    _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(_assertThisInitialized(_this));\n\n    _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n    _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n\n    _this.seekable_ = videojs.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter();\n    _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n    _this.inbandTextTracks_ = {};\n    _this.timelineChangeController_ = new TimelineChangeController();\n    var segmentLoaderSettings = {\n      vhs: _this.vhs_,\n      parse708captions: options.parse708captions,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this.duration();\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys,\n      sourceUpdater: _this.sourceUpdater_,\n      timelineChangeController: _this.timelineChangeController_\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    if (_this.experimentalBufferBasedABR) {\n      _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n        return _this.startABRTimer_();\n      });\n\n      _this.tech_.on('pause', function () {\n        return _this.stopABRTimer_();\n      });\n\n      _this.tech_.on('play', function () {\n        return _this.startABRTimer_();\n      });\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_assertThisInitialized(_this), stat);\n    });\n    _this.logger_ = logger('MPC');\n    _this.triggeredFmp4Usage = false;\n\n    if (_this.tech_.preload() === 'none') {\n      _this.loadOnPlay_ = function () {\n        _this.loadOnPlay_ = null;\n\n        _this.masterPlaylistLoader_.load();\n      };\n\n      _this.tech_.one('play', _this.loadOnPlay_);\n    } else {\n      _this.masterPlaylistLoader_.load();\n    }\n\n    _this.timeToLoadedData__ = -1;\n    _this.mainAppendsToLoadedData__ = -1;\n    _this.audioAppendsToLoadedData__ = -1;\n    var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    _this.tech_.one(event, function () {\n      var timeToLoadedDataStart = Date.now();\n\n      _this.tech_.one('loadeddata', function () {\n        _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n        _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = MasterPlaylistController.prototype;\n\n  _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  };\n\n  _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  };\n\n  _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n    var main = this.mainAppendsToLoadedData_();\n    var audio = this.audioAppendsToLoadedData_();\n\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n\n    return main + audio;\n  };\n\n  _proto.timeToLoadedData_ = function timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @private\n   *\n   */\n  ;\n\n  _proto.checkABR_ = function checkABR_() {\n    var nextPlaylist = this.selectPlaylist();\n\n    if (this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, 'abr');\n    }\n  };\n\n  _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n    var oldMedia = this.media();\n    var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    var newId = playlist.id || playlist.uri;\n\n    if (oldId && oldId !== newId) {\n      this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-rendition-change-\" + cause\n      });\n    }\n\n    this.masterPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.startABRTimer_ = function startABRTimer_() {\n    var _this2 = this;\n\n    this.stopABRTimer_();\n    this.abrTimer_ = window.setInterval(function () {\n      return _this2.checkABR_();\n    }, 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.stopABRTimer_ = function stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n\n    window.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n  ;\n\n  _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n    var master = this.master(); // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in masters\n    // playlist array, use that or an empty array.\n\n    if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n      return master && master.playlists || [];\n    }\n\n    var AUDIO = master.mediaGroups.AUDIO;\n    var groupKeys = Object.keys(AUDIO);\n    var track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n      for (var label in defaultGroup) {\n        if (defaultGroup[label][\"default\"]) {\n          track = {\n            label: label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n\n    if (!track) {\n      return [];\n    }\n\n    var playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (var group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        var properties = AUDIO[group][track.label];\n\n        if (properties.playlists) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else {\n          playlists.push(properties);\n        }\n      }\n    }\n\n    return playlists;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this3 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n\n      if (media.endList && _this3.tech_.preload() !== 'none') {\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this3.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this3.audioSegmentLoader_,\n          SUBTITLES: _this3.subtitleSegmentLoader_,\n          main: _this3.mainSegmentLoader_\n        },\n        tech: _this3.tech_,\n        requestOptions: _this3.requestOptions_,\n        masterPlaylistLoader: _this3.masterPlaylistLoader_,\n        vhs: _this3.vhs_,\n        master: _this3.master(),\n        mediaTypes: _this3.mediaTypes_,\n        blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n      });\n\n      _this3.triggerPresenceUsage_(_this3.master(), media);\n\n      _this3.setupFirstPlay();\n\n      if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        _this3.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n          _this3.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      if (_this3.loadOnPlay_) {\n        _this3.tech_.off('play', _this3.loadOnPlay_);\n      }\n\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this3.excludeUnsupportedVariants_();\n\n        var selectedMedia;\n\n        if (_this3.enableLowInitialPlaylist) {\n          selectedMedia = _this3.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this3.selectPlaylist();\n        }\n\n        if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n\n        _this3.initialMedia_ = selectedMedia;\n\n        _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n\n        var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n        if (!haveJsonSource) {\n          return;\n        }\n\n        updatedPlaylist = _this3.initialMedia_;\n      }\n\n      _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.masterPlaylistLoader_.on('error', function () {\n      _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n    });\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this3.mainSegmentLoader_.abort();\n\n      _this3.mainSegmentLoader_.pause();\n    });\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n\n      _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n      _this3.mainSegmentLoader_.load();\n\n      _this3.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n\n      var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this3.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.',\n          reason: 'playlist-unchanged'\n        }); // useful for monitoring QoS\n\n\n        _this3.tech_.trigger('playliststuck');\n      }\n    });\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-disabled'\n      });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n  ;\n\n  _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-demuxed'\n      });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-webvtt'\n      });\n    }\n\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-aes'\n      });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-alternate-audio'\n      });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-playlist-cue-tags'\n      });\n    }\n  };\n\n  _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n    var currentPlaylist = this.masterPlaylistLoader_.media();\n    var buffered = this.tech_.buffered();\n    var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - this.tech_.currentTime() : 0;\n    var bufferLowWaterLine = this.bufferLowWaterLine();\n    var bufferHighWaterLine = this.bufferHighWaterLine();\n    return shouldSwitchToMedia({\n      currentPlaylist: currentPlaylist,\n      nextPlaylist: nextPlaylist,\n      forwardBuffer: forwardBuffer,\n      bufferLowWaterLine: bufferLowWaterLine,\n      bufferHighWaterLine: bufferHighWaterLine,\n      duration: this.duration(),\n      experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this4 = this;\n\n    if (!this.experimentalBufferBasedABR) {\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this4.selectPlaylist();\n\n        if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n          _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n        }\n\n        _this4.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this4.trigger('progress');\n      });\n    }\n\n    this.mainSegmentLoader_.on('error', function () {\n      _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n    });\n    this.mainSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.mainSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'hls-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.audioSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', function () {\n      _this4.logger_('main segment loader ended');\n\n      _this4.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', function (event) {\n      // never try to early abort with the new ABR algorithm\n      if (_this4.experimentalBufferBasedABR) {\n        return;\n      }\n\n      _this4.delegateLoaders_('all', ['abort']);\n\n      _this4.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n\n    var updateCodecs = function updateCodecs() {\n      if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return _this4.tryToCreateSourceBuffers_();\n      }\n\n      var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n      if (!codecs) {\n        return;\n      }\n\n      _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', function () {\n      _this4.logger_('audioSegmentLoader ended');\n\n      _this4.onEndOfStream();\n    });\n  };\n\n  _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n  ;\n\n  _proto.load = function load() {\n    this.mainSegmentLoader_.load();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions without performing destructive actions, like\n   * removing already buffered content\n   *\n   * @private\n   * @deprecated\n   */\n  ;\n\n  _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    this.fastQualityChange_(media);\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n  ;\n\n  _proto.fastQualityChange_ = function fastQualityChange_(media) {\n    var _this5 = this;\n\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    if (media === this.masterPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(function () {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n      } else {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n  ;\n\n  _proto.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_) {\n      this.load();\n    }\n\n    var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n  ;\n\n  _proto.setupFirstPlay = function setupFirstPlay() {\n    var _this6 = this;\n\n    var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n\n    if (!media.endList) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this6.trigger('firstplay');\n\n          _this6.tech_.setCurrentTime(seekable.end(0));\n\n          _this6.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceEnded_ = function handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n\n    var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n    if (!cues || !cues.length) {\n      return;\n    }\n\n    var duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleDurationChange_ = function handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n  ;\n\n  _proto.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (!isEndOfStream) {\n      return;\n    }\n\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n  ;\n\n  _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable = this.seekable();\n\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n\n    var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n\n    var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n  ;\n\n  _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n    if (error === void 0) {\n      error = {};\n    } // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n\n\n    var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n\n    if (!currentPlaylist) {\n      this.error = error;\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n\n      return;\n    }\n\n    currentPlaylist.playlistErrors_++;\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var enabledPlaylists = playlists.filter(isEnabled);\n    var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n    // forever\n\n    if (playlists.length === 1 && blacklistDuration !== Infinity) {\n      videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    }\n\n    if (isFinalRendition) {\n      // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // blacklist. This allows other playlists to be attempted in case any have been\n      // fixed.\n      var reincluded = false;\n      playlists.forEach(function (playlist) {\n        // skip current playlist which is about to be blacklisted\n        if (playlist === currentPlaylist) {\n          return;\n        }\n\n        var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Blacklist this playlist\n\n\n    var excludeUntil;\n\n    if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + blacklistDuration * 1000;\n    }\n\n    currentPlaylist.excludeUntil = excludeUntil;\n\n    if (error.reason) {\n      currentPlaylist.lastExcludeReason_ = error.reason;\n    }\n\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-blacklisted'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-rendition-blacklisted'\n    }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n    // Would be something like media().id !=== currentPlaylist.id and we  would need something\n    // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n    // from loading a new playlist on any blacklist.\n    // Select a new playlist\n\n    var nextPlaylist = this.selectPlaylist();\n\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n\n    var logFn = error.internal ? this.logger_ : videojs.log.warn;\n    var errorMessage = error.message ? ' ' + error.message : '';\n    logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n\n    if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n  ;\n\n  _proto.pauseLoading = function pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main/master loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n  ;\n\n  _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n    var _this7 = this;\n\n    var loaders = [];\n    var dontFilterPlaylist = filter === 'all';\n\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.masterPlaylistLoader_);\n    }\n\n    var mediaTypes = [];\n\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n\n    mediaTypes.forEach(function (mediaType) {\n      var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(function (name) {\n      var loader = _this7[name + \"SegmentLoader_\"];\n\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(function (loader) {\n      return fnNames.forEach(function (fnName) {\n        if (typeof loader[fnName] === 'function') {\n          loader[fnName]();\n        }\n      });\n    });\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n  ;\n\n  _proto.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var audioSeekable;\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    var master = this.masterPlaylistLoader_.master;\n    var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    var oldEnd;\n    var oldStart;\n\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n\n    this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n  ;\n\n  _proto.updateDuration = function updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n\n    if (isLive) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n\n      return;\n    }\n\n    var buffered = this.tech_.buffered();\n    var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this8 = this;\n\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this8.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n  ;\n\n  _proto.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n  ;\n\n  _proto.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n\n  _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n    var _this9 = this;\n\n    var media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    }; // set \"main\" media equal to video\n\n    media.video = media.main;\n    var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n    var codecs = {};\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n\n    if (media.main.isMuxed) {\n      codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n    }\n\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n\n    if (!codecs.audio && !codecs.video) {\n      this.blacklistCurrentPlaylist({\n        playlist: this.media(),\n        message: 'Could not determine codecs for playlist.',\n        blacklistDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n    var supportFunction = function supportFunction(isFmp4, codec) {\n      return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    };\n\n    var unsupportedCodecs = {};\n    var unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n\n    if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n      var audioGroup = this.media().attributes.AUDIO;\n      this.master().playlists.forEach(function (variant) {\n        var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n        if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n    } // if we have any unsupported codecs blacklist this playlist.\n\n\n    if (Object.keys(unsupportedCodecs).length) {\n      var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n        if (acc) {\n          acc += ', ';\n        }\n\n        acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n        return acc;\n      }, '') + '.';\n      this.blacklistCurrentPlaylist({\n        playlist: this.media(),\n        internal: true,\n        message: message,\n        blacklistDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      var switchMessages = [];\n      ['video', 'audio'].forEach(function (type) {\n        var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n        }\n      });\n\n      if (switchMessages.length) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n          blacklistDuration: Infinity,\n          internal: true\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n  ;\n\n  _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n\n    var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n  ;\n\n  _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    var _this10 = this;\n\n    var playlists = this.master().playlists;\n    var ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var codecs = codecsForPlaylist(_this10.master, variant);\n      var unsupported = [];\n\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(\"audio codec \" + codecs.audio);\n      }\n\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(\"video codec \" + codecs.video);\n      }\n\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(\"text codec \" + codecs.text);\n      }\n\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n\n        _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n      }\n    });\n  }\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n  ;\n\n  _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n    var _this11 = this;\n\n    var ids = [];\n    var playlists = this.master().playlists;\n    var codecs = unwrapCodecList(parseCodecs(codecString));\n    var codecCount_ = codecCount(codecs);\n    var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var blacklistReasons = []; // get codecs from the playlist for this variant\n\n      var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n      var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n\n      if (variantCodecCount !== codecCount_) {\n        blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n\n      if (!_this11.sourceUpdater_.canChangeType()) {\n        var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n        } // the audio codec cannot change\n\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n        }\n      }\n\n      if (blacklistReasons.length) {\n        variant.excludeUntil = Infinity;\n\n        _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n      }\n    });\n  };\n\n  _proto.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable = this.seekable();\n\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n  ;\n\n  _proto.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n  ;\n\n  _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n  };\n\n  _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  };\n\n  return MasterPlaylistController;\n}(videojs.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(vhsHandler, playlist, id) {\n  var mpc = vhsHandler.masterPlaylistController_,\n      smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution && resolution.width;\n    this.height = resolution && resolution.height;\n    this.bandwidth = playlist.attributes.BANDWIDTH;\n  }\n\n  this.codecs = codecsForPlaylist(mpc.master(), playlist);\n  this.playlist = playlist; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = function () {\n    var master = vhsHandler.masterPlaylistController_.master();\n    var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n    if (!playlists) {\n      return [];\n    }\n\n    return playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(vhsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * Returns whether or not the current time should be considered close to buffered content,\n * taking into consideration whether there's enough buffered content for proper playback.\n *\n * @param {Object} options\n *        Options object\n * @param {TimeRange} options.buffered\n *        Current buffer\n * @param {number} options.targetDuration\n *        The active playlist's target duration\n * @param {number} options.currentTime\n *        The current time of the player\n * @return {boolean}\n *         Whether the current time should be considered close to the buffer\n */\n\nvar closeToBufferedContent = function closeToBufferedContent(_ref) {\n  var buffered = _ref.buffered,\n      targetDuration = _ref.targetDuration,\n      currentTime = _ref.currentTime;\n\n  if (!buffered.length) {\n    return false;\n  } // At least two to three segments worth of content should be buffered before there's a\n  // full enough buffer to consider taking any actions.\n\n\n  if (buffered.end(0) - buffered.start(0) < targetDuration * 2) {\n    return false;\n  } // It's possible that, on seek, a remove hasn't completed and the buffered range is\n  // somewhere past the current time. In that event, don't consider the buffered content\n  // close.\n\n\n  if (currentTime > buffered.start(0)) {\n    return false;\n  } // Since target duration generally represents the max (or close to max) duration of a\n  // segment, if the buffer is within a segment of the current time, the gap probably\n  // won't be closed, and current time should be considered close to buffered content.\n\n\n  return buffered.start(0) - currentTime < targetDuration;\n};\n/**\n * @class PlaybackWatcher\n */\n\n\nvar PlaybackWatcher = /*#__PURE__*/function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    this.masterPlaylistController_ = options.masterPlaylistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var playHandler = function playHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    var mpc = this.masterPlaylistController_;\n    var loaderTypes = ['main', 'subtitle', 'audio'];\n    var loaderChecks = {};\n    loaderTypes.forEach(function (type) {\n      loaderChecks[type] = {\n        reset: function reset() {\n          return _this.resetSegmentDownloads_(type);\n        },\n        updateend: function updateend() {\n          return _this.checkSegmentDownloads_(type);\n        }\n      };\n      mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      _this.tech_.off('play', playHandler);\n\n      loaderTypes.forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n        mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n        _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  var _proto = PlaybackWatcher.prototype;\n\n  _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n    this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n  ;\n\n  _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n    var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n    if (this[type + \"StalledDownloads_\"] > 0) {\n      this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n    }\n\n    this[type + \"StalledDownloads_\"] = 0;\n    this[type + \"Buffered_\"] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We blacklist the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n  ;\n\n  _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n    var mpc = this.masterPlaylistController_;\n    var loader = mpc[type + \"SegmentLoader_\"];\n    var buffered = loader.buffered_();\n    var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n    this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n\n    this[type + \"StalledDownloads_\"]++;\n    this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[type + \"StalledDownloads_\"] < 10) {\n      return;\n    }\n\n    this.logger_(type + \" loader stalled download exclusion\");\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: \"vhs-\" + type + \"-download-exclusion\"\n    });\n\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n\n    mpc.blacklistCurrentPlaylist({\n      message: \"Excessive \" + type + \" segment downloading detected.\"\n    }, Infinity);\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = this.tech_.currentTime();\n      return;\n    }\n\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n  ;\n\n  _proto.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n  ;\n\n  _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n\n    if (!seeking) {\n      return false;\n    }\n\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    var seekTo;\n\n    if (isAfterSeekableRange) {\n      var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    var buffered = this.tech_.buffered();\n\n    if (closeToBufferedContent({\n      buffered: buffered,\n      targetDuration: this.media().targetDuration,\n      currentTime: currentTime\n    })) {\n      seekTo = buffered.start(0) + SAFE_TIME_DELTA;\n      this.logger_(\"Buffered region starts (\" + buffered.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n  ;\n\n  _proto.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n  ;\n\n  _proto.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      // Tech is seeking or bad seek fixed, no action needed\n      return true;\n    }\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n      this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-live-resync'\n      });\n      return true;\n    }\n\n    var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime: currentTime\n    });\n\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-video-underflow'\n      });\n      return true;\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n      this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n      this.cancelTimer_();\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n    return false;\n  };\n\n  _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n    if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n      allowSeeksWithinUnsafeLiveWindow = false;\n    }\n\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    var isLive = !playlist.endList;\n\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.videoUnderflow_ = function videoUnderflow_(_ref2) {\n    var videoBuffered = _ref2.videoBuffered,\n        audioBuffered = _ref2.audioBuffered,\n        currentTime = _ref2.currentTime; // audio only content will not have video underflow :)\n\n    if (!videoBuffered) {\n      return;\n    }\n\n    var gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      var videoRange = findRange(videoBuffered, currentTime);\n      var audioRange = findRange(audioBuffered, currentTime);\n\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n\n    } else {\n      var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n\n    if (gap) {\n      this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n  ;\n\n  _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-gap-skip'\n    });\n  };\n\n  _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$4 = \"2.9.2\";\nvar version$3 = \"5.12.2\";\nvar version$2 = \"0.17.0\";\nvar version$1 = \"4.7.0\";\nvar version = \"3.1.2\";\nvar Vhs = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector: lastBandwidthSelector,\n  movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(function (prop) {\n  Object.defineProperty(Vhs, prop, {\n    get: function get() {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n      return Config[prop];\n    },\n    set: function set(value) {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nvar handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\n\nvar handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n  vhs.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var codecs = {};\n\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n\n  var videoContentType = getMimeForCodec(codecs.video);\n  var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\n\nvar getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n  return playlists.reduce(function (keySystemsArr, playlist) {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n\n    var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n      var keySystemOptions = playlist.contentProtection[keySystem];\n\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n\n      return keySystemsObj;\n    }, {});\n\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the master playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\n\nvar waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n  var player = _ref.player,\n      sourceKeySystems = _ref.sourceKeySystems,\n      audioMedia = _ref.audioMedia,\n      mainPlaylists = _ref.mainPlaylists;\n\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n\n  var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  var initializationFinishedPromises = [];\n  var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n    keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([// If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\n\nvar setupEmeOptions = function setupEmeOptions(_ref2) {\n  var player = _ref2.player,\n      sourceKeySystems = _ref2.sourceKeySystems,\n      media = _ref2.media,\n      audioMedia = _ref2.audioMedia;\n  var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n  if (!sourceOptions) {\n    return false;\n  }\n\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n\n  return true;\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\n\nvar expandDataUri = function expandDataUri(dataUri) {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nVhs.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nVhs.isSupported = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar VhsHandler = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VhsHandler, _Component);\n\n  function VhsHandler(source, tech, options) {\n    var _this;\n\n    _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n    if (options.hls && Object.keys(options.hls).length) {\n      videojs.log.warn('Using hls options is deprecated. Use vhs instead.');\n    } // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n\n    if (typeof options.initialBandwidth === 'number') {\n      _this.options_.bandwidth = options.initialBandwidth;\n    }\n\n    _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('vhs')) {\n        Object.defineProperty(_player, 'vhs', {\n          get: function get() {\n            videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'vhs-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('dash')) {\n        Object.defineProperty(_player, 'dash', {\n          get: function get() {\n            videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        _this.masterPlaylistController_.checkABR_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have mpc loaded.\n      if (this.tech_.error() && this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  var _proto = VhsHandler.prototype;\n\n  _proto.setOptions_ = function setOptions_() {\n    var _this2 = this; // defaults\n\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    }\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        var storedObject = getVhsLocalStorage();\n\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-bandwidth-from-local-storage'\n          });\n        }\n\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS'].forEach(function (option) {\n      if (typeof _this2.source_[option] !== 'undefined') {\n        _this2.options_[option] = _this2.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n  ;\n\n  _proto.src = function src(_src, type) {\n    var _this3 = this; // do nothing if the src is falsey\n\n\n    if (!_src) {\n      return;\n    }\n\n    this.setOptions_(); // add master playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = function (time) {\n      _this3.tech_.setCurrentTime(time);\n    };\n\n    if (this.options_.smoothQualityChange) {\n      videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n    }\n\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    var playbackWatcherOptions = videojs.mergeOptions({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: function seekable() {\n        return _this3.seekable();\n      },\n      media: function media() {\n        return _this3.masterPlaylistController_.media();\n      },\n      masterPlaylistController: this.masterPlaylistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs.players[_this3.tech_.options_.playerId];\n      var error = _this3.masterPlaylistController_.error;\n\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n\n      player.error(error);\n    });\n    var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get() {\n          return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n        },\n        set: function set(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set: function set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get() {\n          return _this3.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      mediaAppends: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaAppends_() || 0;\n        },\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get() {\n          return _this3.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get() {\n          return _this3.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get() {\n          return _this3.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get() {\n          return _this3.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get() {\n          return _this3.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get() {\n          return _this3.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get() {\n          return _this3.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n    this.tech_.on('bandwidthupdate', function () {\n      if (_this3.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: _this3.bandwidth,\n          throughput: Math.round(_this3.throughput)\n        });\n      }\n    });\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(_this3);\n    });\n    this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n      _this3.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.mediaSourceUrl_ = window.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n  ;\n\n  _proto.setupEme_ = function setupEme_() {\n    var _this4 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    var didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    }); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.masterPlaylistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.master.playlists\n    }).then(function () {\n      _this4.logger_('created EME key session');\n\n      _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n    })[\"catch\"](function (err) {\n      _this4.logger_('error while creating EME key session', err);\n\n      _this4.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n  ;\n\n  _proto.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this5 = this;\n\n    var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n\n    this.qualityLevels_ = player.qualityLevels();\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      handleVhsLoadedMetadata(_this5.qualityLevels_, _this5);\n    });\n    this.playlists.on('mediachange', function () {\n      handleVhsMediaChange(_this5.qualityLevels_, _this5.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  VhsHandler.version = function version$5() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  _proto.version = function version() {\n    return this.constructor.version();\n  };\n\n  _proto.canChangeType = function canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n  ;\n\n  _proto.play = function play() {\n    this.masterPlaylistController_.play();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n\n    if (this.player_) {\n      delete this.player_.vhs;\n      delete this.player_.dash;\n      delete this.player_.hls;\n    }\n\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n    if (this.tech_) {\n      delete this.tech_.hls;\n    }\n\n    if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n      window.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.masterPlaylistController_.media(),\n      time: time,\n      callback: callback\n    });\n  } // the player must be playing before calling this\n  ;\n\n  _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n    if (pauseAfterSeek === void 0) {\n      pauseAfterSeek = true;\n    }\n\n    if (retryCount === void 0) {\n      retryCount = 2;\n    }\n\n    return seekToProgramTime({\n      programTime: programTime,\n      playlist: this.masterPlaylistController_.media(),\n      retryCount: retryCount,\n      pauseAfterSeek: pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback: callback\n    });\n  };\n\n  return VhsHandler;\n}(Component);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource: function canHandleSource(srcObj, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n\n    if (!videojs.hasOwnProperty('hls')) {\n      Object.defineProperty(tech, 'hls', {\n        get: function get() {\n          videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n          return tech.vhs;\n        },\n        configurable: true\n      });\n    }\n\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType: function canPlayType(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n        _videojs$mergeOptions2 = _videojs$mergeOptions.vhs.overrideNative,\n        overrideNative = _videojs$mergeOptions2 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions2;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\n\nvideojs.VhsHandler = VhsHandler;\nObject.defineProperty(videojs, 'HlsHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n    return VhsHandler;\n  },\n  configurable: true\n});\nvideojs.VhsSourceHandler = VhsSourceHandler;\nObject.defineProperty(videojs, 'HlsSourceHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n    return VhsSourceHandler;\n  },\n  configurable: true\n});\nvideojs.Vhs = Vhs;\nObject.defineProperty(videojs, 'Hls', {\n  get: function get() {\n    videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n    return Vhs;\n  },\n  configurable: true\n});\n\nif (!videojs.use) {\n  videojs.registerComponent('Hls', Vhs);\n  videojs.registerComponent('Vhs', Vhs);\n}\n\nvideojs.options.vhs = videojs.options.vhs || {};\nvideojs.options.hls = videojs.options.hls || {};\n\nif (videojs.registerPlugin) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs;"],"sourceRoot":""}